{"ast":null,"code":"import axios from 'axios';\n\n// Constants\nconst API_BASE_URL = 'http://localhost:5000/api';\nconst STORAGE_KEYS = {\n  TOKEN: 'token',\n  USER_ID: 'userId',\n  USER: 'user'\n};\n\n// Creating backend configuration\nconst Api = axios.create({\n  baseURL: API_BASE_URL,\n  withCredentials: true,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Helper Functions\nconst clearStorage = () => {\n  Object.values(STORAGE_KEYS).forEach(key => localStorage.removeItem(key));\n};\nconst updateStoredUserData = userData => {\n  if (!userData) return;\n  const userToStore = {\n    _id: userData._id || userData.id,\n    nickname: userData.nickname,\n    email: userData.email,\n    updatedAt: userData.updatedAt\n  };\n  localStorage.setItem(STORAGE_KEYS.USER, JSON.stringify(userToStore));\n};\n\n// Request Interceptor\nApi.interceptors.request.use(config => {\n  const token = localStorage.getItem(STORAGE_KEYS.TOKEN);\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// Response Interceptor\nApi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    clearStorage();\n    // Optionally redirect to login page\n    // window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// API Functions\nexport const signupApi = async data => {\n  try {\n    const response = await Api.post('users/signup', data);\n    return response;\n  } catch (error) {\n    throw handleApiError(error);\n  }\n};\nexport const loginApi = async data => {\n  try {\n    var _response$data;\n    const response = await Api.post('users/login', data);\n    if ((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.data) {\n      const {\n        user,\n        token\n      } = response.data.data;\n      localStorage.setItem(STORAGE_KEYS.TOKEN, token);\n      localStorage.setItem(STORAGE_KEYS.USER_ID, user._id || user.id);\n      updateStoredUserData(user);\n      console.log('Login successful:', {\n        userId: user._id || user.id,\n        nickname: user.nickname,\n        email: user.email\n      });\n    } else {\n      throw new Error('Invalid response format from server');\n    }\n    return response;\n  } catch (error) {\n    clearStorage();\n    throw handleApiError(error);\n  }\n};\nexport const getUserProfile = async () => {\n  try {\n    var _response$data2;\n    const userId = localStorage.getItem(STORAGE_KEYS.USER_ID);\n    if (!userId) throw new Error('User ID not found. Please login again.');\n    const response = await Api.get(`users/profile/${userId}`);\n    if ((_response$data2 = response.data) !== null && _response$data2 !== void 0 && _response$data2.data) {\n      updateStoredUserData(response.data.data);\n    }\n    return response;\n  } catch (error) {\n    throw handleApiError(error);\n  }\n};\nexport const updateUserProfile = async userData => {\n  try {\n    var _response$data3;\n    console.log('Updating profile:', {\n      token: localStorage.getItem(STORAGE_KEYS.TOKEN),\n      userId: localStorage.getItem(STORAGE_KEYS.USER_ID),\n      updateData: userData\n    });\n    const response = await Api.put('users/profile/update', userData);\n    if ((_response$data3 = response.data) !== null && _response$data3 !== void 0 && _response$data3.success) {\n      updateStoredUserData(response.data.user);\n    }\n    return response;\n  } catch (error) {\n    throw handleApiError(error);\n  }\n};\nexport const changePassword = async passwordData => {\n  try {\n    const response = await Api.put('users/change-password', passwordData);\n    return response;\n  } catch (error) {\n    throw handleApiError(error);\n  }\n};\n\n// Utility Functions\nexport const isLoggedIn = () => {\n  const token = localStorage.getItem(STORAGE_KEYS.TOKEN);\n  const userId = localStorage.getItem(STORAGE_KEYS.USER_ID);\n  return Boolean(token && userId);\n};\nexport const getStoredUserData = () => {\n  try {\n    const userData = localStorage.getItem(STORAGE_KEYS.USER);\n    return userData ? JSON.parse(userData) : null;\n  } catch (error) {\n    console.error('Error parsing stored user data:', error);\n    return null;\n  }\n};\nexport const logout = () => {\n  clearStorage();\n};\n\n// Error Handler\nconst handleApiError = error => {\n  var _error$response2, _error$response2$data, _error$response3, _error$response4;\n  console.error('API Error:', error);\n  return {\n    message: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message || 'An error occurred',\n    status: (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status,\n    data: (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data,\n    originalError: error\n  };\n};\n\n// Custom Hooks (if using React)\nexport const useAuth = () => {\n  return {\n    isLoggedIn: isLoggedIn(),\n    userData: getStoredUserData(),\n    logout\n  };\n};\nexport default Api;","map":{"version":3,"names":["axios","API_BASE_URL","STORAGE_KEYS","TOKEN","USER_ID","USER","Api","create","baseURL","withCredentials","headers","clearStorage","Object","values","forEach","key","localStorage","removeItem","updateStoredUserData","userData","userToStore","_id","id","nickname","email","updatedAt","setItem","JSON","stringify","interceptors","request","use","config","token","getItem","Authorization","error","Promise","reject","response","_error$response","status","signupApi","data","post","handleApiError","loginApi","_response$data","user","console","log","userId","Error","getUserProfile","_response$data2","get","updateUserProfile","_response$data3","updateData","put","success","changePassword","passwordData","isLoggedIn","Boolean","getStoredUserData","parse","logout","_error$response2","_error$response2$data","_error$response3","_error$response4","message","originalError","useAuth"],"sources":["C:/uiux development/frontend/confessapp/src/apis/Api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Constants\r\nconst API_BASE_URL = 'http://localhost:5000/api';\r\nconst STORAGE_KEYS = {\r\n    TOKEN: 'token',\r\n    USER_ID: 'userId',\r\n    USER: 'user'\r\n};\r\n\r\n// Creating backend configuration\r\nconst Api = axios.create({\r\n    baseURL: API_BASE_URL,\r\n    withCredentials: true,\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    }\r\n});\r\n\r\n// Helper Functions\r\nconst clearStorage = () => {\r\n    Object.values(STORAGE_KEYS).forEach(key => localStorage.removeItem(key));\r\n};\r\n\r\nconst updateStoredUserData = (userData) => {\r\n    if (!userData) return;\r\n    \r\n    const userToStore = {\r\n        _id: userData._id || userData.id,\r\n        nickname: userData.nickname,\r\n        email: userData.email,\r\n        updatedAt: userData.updatedAt\r\n    };\r\n    \r\n    localStorage.setItem(STORAGE_KEYS.USER, JSON.stringify(userToStore));\r\n};\r\n\r\n// Request Interceptor\r\nApi.interceptors.request.use(\r\n    (config) => {\r\n        const token = localStorage.getItem(STORAGE_KEYS.TOKEN);\r\n        if (token) {\r\n            config.headers.Authorization = `Bearer ${token}`;\r\n        }\r\n        return config;\r\n    },\r\n    (error) => Promise.reject(error)\r\n);\r\n\r\n// Response Interceptor\r\nApi.interceptors.response.use(\r\n    (response) => response,\r\n    (error) => {\r\n        if (error.response?.status === 401) {\r\n            clearStorage();\r\n            // Optionally redirect to login page\r\n            // window.location.href = '/login';\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n// API Functions\r\nexport const signupApi = async (data) => {\r\n    try {\r\n        const response = await Api.post('users/signup', data);\r\n        return response;\r\n    } catch (error) {\r\n        throw handleApiError(error);\r\n    }\r\n};\r\n\r\nexport const loginApi = async (data) => {\r\n    try {\r\n        const response = await Api.post('users/login', data);\r\n        \r\n        if (response.data?.data) {\r\n            const { user, token } = response.data.data;\r\n            \r\n            localStorage.setItem(STORAGE_KEYS.TOKEN, token);\r\n            localStorage.setItem(STORAGE_KEYS.USER_ID, user._id || user.id);\r\n            updateStoredUserData(user);\r\n\r\n            console.log('Login successful:', {\r\n                userId: user._id || user.id,\r\n                nickname: user.nickname,\r\n                email: user.email\r\n            });\r\n        } else {\r\n            throw new Error('Invalid response format from server');\r\n        }\r\n\r\n        return response;\r\n    } catch (error) {\r\n        clearStorage();\r\n        throw handleApiError(error);\r\n    }\r\n};\r\n\r\nexport const getUserProfile = async () => {\r\n    try {\r\n        const userId = localStorage.getItem(STORAGE_KEYS.USER_ID);\r\n        if (!userId) throw new Error('User ID not found. Please login again.');\r\n\r\n        const response = await Api.get(`users/profile/${userId}`);\r\n        \r\n        if (response.data?.data) {\r\n            updateStoredUserData(response.data.data);\r\n        }\r\n\r\n        return response;\r\n    } catch (error) {\r\n        throw handleApiError(error);\r\n    }\r\n};\r\n\r\nexport const updateUserProfile = async (userData) => {\r\n    try {\r\n        console.log('Updating profile:', {\r\n            token: localStorage.getItem(STORAGE_KEYS.TOKEN),\r\n            userId: localStorage.getItem(STORAGE_KEYS.USER_ID),\r\n            updateData: userData\r\n        });\r\n\r\n        const response = await Api.put('users/profile/update', userData);\r\n        \r\n        if (response.data?.success) {\r\n            updateStoredUserData(response.data.user);\r\n        }\r\n\r\n        return response;\r\n    } catch (error) {\r\n        throw handleApiError(error);\r\n    }\r\n};\r\n\r\nexport const changePassword = async (passwordData) => {\r\n    try {\r\n        const response = await Api.put('users/change-password', passwordData);\r\n        return response;\r\n    } catch (error) {\r\n        throw handleApiError(error);\r\n    }\r\n};\r\n\r\n// Utility Functions\r\nexport const isLoggedIn = () => {\r\n    const token = localStorage.getItem(STORAGE_KEYS.TOKEN);\r\n    const userId = localStorage.getItem(STORAGE_KEYS.USER_ID);\r\n    return Boolean(token && userId);\r\n};\r\n\r\nexport const getStoredUserData = () => {\r\n    try {\r\n        const userData = localStorage.getItem(STORAGE_KEYS.USER);\r\n        return userData ? JSON.parse(userData) : null;\r\n    } catch (error) {\r\n        console.error('Error parsing stored user data:', error);\r\n        return null;\r\n    }\r\n};\r\n\r\nexport const logout = () => {\r\n    clearStorage();\r\n};\r\n\r\n// Error Handler\r\nconst handleApiError = (error) => {\r\n    console.error('API Error:', error);\r\n    \r\n    return {\r\n        message: error.response?.data?.message || error.message || 'An error occurred',\r\n        status: error.response?.status,\r\n        data: error.response?.data,\r\n        originalError: error\r\n    };\r\n};\r\n\r\n// Custom Hooks (if using React)\r\nexport const useAuth = () => {\r\n    return {\r\n        isLoggedIn: isLoggedIn(),\r\n        userData: getStoredUserData(),\r\n        logout,\r\n    };\r\n};\r\n\r\nexport default Api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}