{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nlet inactivityTimeout;\nlet notificationTimeout;\nconst resetInactivityTimeout = redirectToLogin => {\n  clearTimeout(inactivityTimeout);\n  clearTimeout(notificationTimeout);\n\n  // Set timeout for showing notification 2 minutes before session expiry\n  notificationTimeout = setTimeout(() => {\n    toast.warning('Your session will expire in 2 minutes. Please save your work.', {\n      position: \"top-right\",\n      autoClose: 120000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined\n    });\n  }, 3 * 60 * 1000); // 3 minutes\n\n  inactivityTimeout = setTimeout(() => {\n    redirectToLogin();\n  }, 5 * 60 * 1000); // 5 minutes\n};\nconst setupInactivityHandler = redirectToLogin => {\n  window.onload = () => resetInactivityTimeout(redirectToLogin);\n  document.onmousemove = () => resetInactivityTimeout(redirectToLogin);\n  document.onkeypress = () => resetInactivityTimeout(redirectToLogin);\n};\nconst InactivityHandler = ({\n  children\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const redirectToLogin = () => {\n    // Clear user session data\n    localStorage.removeItem('token');\n    localStorage.removeItem('userId');\n    localStorage.removeItem('user');\n    localStorage.removeItem('lastActive');\n    localStorage.removeItem('redirectUrl');\n    navigate(\"/login\");\n  };\n  useEffect(() => {\n    setupInactivityHandler(redirectToLogin);\n  }, [navigate]);\n  return children;\n};\n_s(InactivityHandler, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = InactivityHandler;\nexport default InactivityHandler;\nvar _c;\n$RefreshReg$(_c, \"InactivityHandler\");","map":{"version":3,"names":["useEffect","useNavigate","toast","inactivityTimeout","notificationTimeout","resetInactivityTimeout","redirectToLogin","clearTimeout","setTimeout","warning","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","setupInactivityHandler","window","onload","document","onmousemove","onkeypress","InactivityHandler","children","_s","navigate","localStorage","removeItem","_c","$RefreshReg$"],"sources":["C:/uiux development/frontend/confessapp/src/utils/inactivityHandler.jsx"],"sourcesContent":["import { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\n\r\nlet inactivityTimeout;\r\nlet notificationTimeout;\r\n\r\nconst resetInactivityTimeout = (redirectToLogin) => {\r\n    clearTimeout(inactivityTimeout);\r\n    clearTimeout(notificationTimeout);\r\n\r\n    // Set timeout for showing notification 2 minutes before session expiry\r\n    notificationTimeout = setTimeout(() => {\r\n        toast.warning('Your session will expire in 2 minutes. Please save your work.', {\r\n            position: \"top-right\",\r\n            autoClose: 120000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n        });\r\n    }, 3 * 60 * 1000); // 3 minutes\r\n\r\n    inactivityTimeout = setTimeout(() => {\r\n        redirectToLogin();\r\n    }, 5 * 60 * 1000); // 5 minutes\r\n};\r\n\r\nconst setupInactivityHandler = (redirectToLogin) => {\r\n    window.onload = () => resetInactivityTimeout(redirectToLogin);\r\n    document.onmousemove = () => resetInactivityTimeout(redirectToLogin);\r\n    document.onkeypress = () => resetInactivityTimeout(redirectToLogin);\r\n};\r\n\r\nconst InactivityHandler = ({ children }) => {\r\n    const navigate = useNavigate();\r\n\r\n    const redirectToLogin = () => {\r\n        // Clear user session data\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('userId');\r\n        localStorage.removeItem('user');\r\n        localStorage.removeItem('lastActive');\r\n        localStorage.removeItem('redirectUrl');\r\n        navigate(\"/login\");\r\n    };\r\n\r\n    useEffect(() => {\r\n        setupInactivityHandler(redirectToLogin);\r\n    }, [navigate]);\r\n\r\n    return children;\r\n};\r\n\r\nexport default InactivityHandler;"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,KAAK,QAAQ,gBAAgB;AAEtC,IAAIC,iBAAiB;AACrB,IAAIC,mBAAmB;AAEvB,MAAMC,sBAAsB,GAAIC,eAAe,IAAK;EAChDC,YAAY,CAACJ,iBAAiB,CAAC;EAC/BI,YAAY,CAACH,mBAAmB,CAAC;;EAEjC;EACAA,mBAAmB,GAAGI,UAAU,CAAC,MAAM;IACnCN,KAAK,CAACO,OAAO,CAAC,+DAA+D,EAAE;MAC3EC,QAAQ,EAAE,WAAW;MACrBC,SAAS,EAAE,MAAM;MACjBC,eAAe,EAAE,KAAK;MACtBC,YAAY,EAAE,IAAI;MAClBC,YAAY,EAAE,IAAI;MAClBC,SAAS,EAAE,IAAI;MACfC,QAAQ,EAAEC;IACd,CAAC,CAAC;EACN,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;;EAEnBd,iBAAiB,GAAGK,UAAU,CAAC,MAAM;IACjCF,eAAe,CAAC,CAAC;EACrB,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;AACvB,CAAC;AAED,MAAMY,sBAAsB,GAAIZ,eAAe,IAAK;EAChDa,MAAM,CAACC,MAAM,GAAG,MAAMf,sBAAsB,CAACC,eAAe,CAAC;EAC7De,QAAQ,CAACC,WAAW,GAAG,MAAMjB,sBAAsB,CAACC,eAAe,CAAC;EACpEe,QAAQ,CAACE,UAAU,GAAG,MAAMlB,sBAAsB,CAACC,eAAe,CAAC;AACvE,CAAC;AAED,MAAMkB,iBAAiB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAMC,QAAQ,GAAG1B,WAAW,CAAC,CAAC;EAE9B,MAAMK,eAAe,GAAGA,CAAA,KAAM;IAC1B;IACAsB,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;IAChCD,YAAY,CAACC,UAAU,CAAC,QAAQ,CAAC;IACjCD,YAAY,CAACC,UAAU,CAAC,MAAM,CAAC;IAC/BD,YAAY,CAACC,UAAU,CAAC,YAAY,CAAC;IACrCD,YAAY,CAACC,UAAU,CAAC,aAAa,CAAC;IACtCF,QAAQ,CAAC,QAAQ,CAAC;EACtB,CAAC;EAED3B,SAAS,CAAC,MAAM;IACZkB,sBAAsB,CAACZ,eAAe,CAAC;EAC3C,CAAC,EAAE,CAACqB,QAAQ,CAAC,CAAC;EAEd,OAAOF,QAAQ;AACnB,CAAC;AAACC,EAAA,CAlBIF,iBAAiB;EAAA,QACFvB,WAAW;AAAA;AAAA6B,EAAA,GAD1BN,iBAAiB;AAoBvB,eAAeA,iBAAiB;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}