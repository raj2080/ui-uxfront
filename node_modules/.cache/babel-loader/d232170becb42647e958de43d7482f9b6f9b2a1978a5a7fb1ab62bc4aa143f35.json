{"ast":null,"code":"// backend/middleware/auth.js\nconst jwt = require('jsonwebtoken');\n\n// Helper function for getting current datetime in UTC\nconst getCurrentDateTime = () => {\n  return new Date().toISOString().slice(0, 19).replace('T', ' ');\n};\nconst authMiddleware = async (req, res, next) => {\n  try {\n    var _req$header;\n    const token = (_req$header = req.header('Authorization')) === null || _req$header === void 0 ? void 0 : _req$header.replace('Bearer ', '');\n    if (!token) {\n      return res.status(401).json({\n        success: false,\n        message: 'No authentication token provided',\n        timestamp: getCurrentDateTime()\n      });\n    }\n    const decoded = jwt.verify(token, process.env.JWT_SECRET);\n    if (!decoded.id) {\n      return res.status(401).json({\n        success: false,\n        message: 'Invalid token structure',\n        timestamp: getCurrentDateTime()\n      });\n    }\n    req.user = {\n      _id: decoded.id,\n      id: decoded.id,\n      timestamp: getCurrentDateTime()\n    };\n    next();\n  } catch (error) {\n    console.error('Auth Error:', error);\n    res.status(401).json({\n      success: false,\n      message: 'Authentication failed',\n      error: error.message,\n      timestamp: getCurrentDateTime()\n    });\n  }\n};\nmodule.exports = authMiddleware;","map":{"version":3,"names":["jwt","require","getCurrentDateTime","Date","toISOString","slice","replace","authMiddleware","req","res","next","_req$header","token","header","status","json","success","message","timestamp","decoded","verify","process","env","JWT_SECRET","id","user","_id","error","console","module","exports"],"sources":["C:/uiux development/frontend/confessapp/src/apis/Api.js"],"sourcesContent":["// backend/middleware/auth.js\r\nconst jwt = require('jsonwebtoken');\r\n\r\n// Helper function for getting current datetime in UTC\r\nconst getCurrentDateTime = () => {\r\n    return new Date().toISOString().slice(0, 19).replace('T', ' ');\r\n};\r\n\r\nconst authMiddleware = async (req, res, next) => {\r\n    try {\r\n        const token = req.header('Authorization')?.replace('Bearer ', '');\r\n\r\n        if (!token) {\r\n            return res.status(401).json({\r\n                success: false,\r\n                message: 'No authentication token provided',\r\n                timestamp: getCurrentDateTime()\r\n            });\r\n        }\r\n\r\n        const decoded = jwt.verify(token, process.env.JWT_SECRET);\r\n        \r\n        if (!decoded.id) {\r\n            return res.status(401).json({\r\n                success: false,\r\n                message: 'Invalid token structure',\r\n                timestamp: getCurrentDateTime()\r\n            });\r\n        }\r\n\r\n        req.user = {\r\n            _id: decoded.id,\r\n            id: decoded.id,\r\n            timestamp: getCurrentDateTime()\r\n        };\r\n\r\n        next();\r\n    } catch (error) {\r\n        console.error('Auth Error:', error);\r\n        res.status(401).json({\r\n            success: false,\r\n            message: 'Authentication failed',\r\n            error: error.message,\r\n            timestamp: getCurrentDateTime()\r\n        });\r\n    }\r\n};\r\n\r\nmodule.exports = authMiddleware;"],"mappings":"AAAA;AACA,MAAMA,GAAG,GAAGC,OAAO,CAAC,cAAc,CAAC;;AAEnC;AACA,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAC7B,OAAO,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAACC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;AAClE,CAAC;AAED,MAAMC,cAAc,GAAG,MAAAA,CAAOC,GAAG,EAAEC,GAAG,EAAEC,IAAI,KAAK;EAC7C,IAAI;IAAA,IAAAC,WAAA;IACA,MAAMC,KAAK,IAAAD,WAAA,GAAGH,GAAG,CAACK,MAAM,CAAC,eAAe,CAAC,cAAAF,WAAA,uBAA3BA,WAAA,CAA6BL,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC;IAEjE,IAAI,CAACM,KAAK,EAAE;MACR,OAAOH,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QACxBC,OAAO,EAAE,KAAK;QACdC,OAAO,EAAE,kCAAkC;QAC3CC,SAAS,EAAEhB,kBAAkB,CAAC;MAClC,CAAC,CAAC;IACN;IAEA,MAAMiB,OAAO,GAAGnB,GAAG,CAACoB,MAAM,CAACR,KAAK,EAAES,OAAO,CAACC,GAAG,CAACC,UAAU,CAAC;IAEzD,IAAI,CAACJ,OAAO,CAACK,EAAE,EAAE;MACb,OAAOf,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QACxBC,OAAO,EAAE,KAAK;QACdC,OAAO,EAAE,yBAAyB;QAClCC,SAAS,EAAEhB,kBAAkB,CAAC;MAClC,CAAC,CAAC;IACN;IAEAM,GAAG,CAACiB,IAAI,GAAG;MACPC,GAAG,EAAEP,OAAO,CAACK,EAAE;MACfA,EAAE,EAAEL,OAAO,CAACK,EAAE;MACdN,SAAS,EAAEhB,kBAAkB,CAAC;IAClC,CAAC;IAEDQ,IAAI,CAAC,CAAC;EACV,CAAC,CAAC,OAAOiB,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,aAAa,EAAEA,KAAK,CAAC;IACnClB,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MACjBC,OAAO,EAAE,KAAK;MACdC,OAAO,EAAE,uBAAuB;MAChCU,KAAK,EAAEA,KAAK,CAACV,OAAO;MACpBC,SAAS,EAAEhB,kBAAkB,CAAC;IAClC,CAAC,CAAC;EACN;AACJ,CAAC;AAED2B,MAAM,CAACC,OAAO,GAAGvB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}