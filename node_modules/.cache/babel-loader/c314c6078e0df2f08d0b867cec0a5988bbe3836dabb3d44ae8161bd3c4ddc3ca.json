{"ast":null,"code":"// src/apis/Api.js\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\n\n// Constants\nconst API_CONFIG = {\n  BASE_URL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\n  TIMEOUT: 15000\n};\nconst STORAGE_KEYS = {\n  TOKEN: 'token',\n  USER_ID: 'userId',\n  USER: 'user',\n  REFRESH_TOKEN: 'refreshToken',\n  LAST_ACTIVE: 'lastActive'\n};\n\n// API Instance\nconst Api = axios.create({\n  baseURL: API_CONFIG.BASE_URL,\n  timeout: API_CONFIG.TIMEOUT,\n  withCredentials: true,\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  }\n});\n\n// Helper Functions\nconst clearStorage = () => {\n  Object.values(STORAGE_KEYS).forEach(key => localStorage.removeItem(key));\n  sessionStorage.clear();\n};\n\n// API Functions\nexport const loginApi = async data => {\n  try {\n    var _response$data;\n    const response = await Api.post('/users/login', data);\n    if ((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.data) {\n      const {\n        user,\n        token,\n        refreshToken\n      } = response.data.data;\n      localStorage.setItem(STORAGE_KEYS.TOKEN, token);\n      localStorage.setItem(STORAGE_KEYS.USER_ID, user._id);\n      localStorage.setItem(STORAGE_KEYS.USER, JSON.stringify(user));\n      localStorage.setItem(STORAGE_KEYS.REFRESH_TOKEN, refreshToken);\n      localStorage.setItem(STORAGE_KEYS.LAST_ACTIVE, new Date().toISOString());\n    }\n    return response.data;\n  } catch (error) {\n    throw handleApiError(error);\n  }\n};\nexport const signupApi = async data => {\n  try {\n    const response = await Api.post('/users/signup', data);\n    return response.data;\n  } catch (error) {\n    throw handleApiError(error);\n  }\n};\nexport const getUserProfile = async () => {\n  try {\n    const userId = localStorage.getItem(STORAGE_KEYS.USER_ID);\n    const response = await Api.get(`/users/profile/${userId}`);\n    return response.data;\n  } catch (error) {\n    throw handleApiError(error);\n  }\n};\nexport const updateUserProfile = async userData => {\n  try {\n    const response = await Api.put('/users/profile/update', userData);\n    return response.data;\n  } catch (error) {\n    throw handleApiError(error);\n  }\n};\nexport const changePassword = async passwordData => {\n  try {\n    const response = await Api.put('/users/change-password', passwordData);\n    return response.data;\n  } catch (error) {\n    throw handleApiError(error);\n  }\n};\nexport const createConfession = async confessionData => {\n  try {\n    const response = await Api.post('/confessions/create', confessionData);\n    return response.data;\n  } catch (error) {\n    throw handleApiError(error);\n  }\n};\n\n// Utility Functions\nexport const isLoggedIn = () => {\n  const token = localStorage.getItem(STORAGE_KEYS.TOKEN);\n  return !!token;\n};\nexport const logout = () => {\n  clearStorage();\n  window.location.href = '/login';\n};\n\n// Error Handler\nconst handleApiError = error => {\n  var _error$response, _error$response$data, _error$response2, _error$response3;\n  const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message;\n  toast.error(message);\n  return {\n    message,\n    status: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status,\n    data: (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data\n  };\n};\nexport default Api;","map":{"version":3,"names":["axios","toast","API_CONFIG","BASE_URL","process","env","REACT_APP_API_URL","TIMEOUT","STORAGE_KEYS","TOKEN","USER_ID","USER","REFRESH_TOKEN","LAST_ACTIVE","Api","create","baseURL","timeout","withCredentials","headers","clearStorage","Object","values","forEach","key","localStorage","removeItem","sessionStorage","clear","loginApi","data","_response$data","response","post","user","token","refreshToken","setItem","_id","JSON","stringify","Date","toISOString","error","handleApiError","signupApi","getUserProfile","userId","getItem","get","updateUserProfile","userData","put","changePassword","passwordData","createConfession","confessionData","isLoggedIn","logout","window","location","href","_error$response","_error$response$data","_error$response2","_error$response3","message","status"],"sources":["C:/uiux development/frontend/confessapp/src/apis/Api.js"],"sourcesContent":["// src/apis/Api.js\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n\r\n// Constants\r\nconst API_CONFIG = {\r\n    BASE_URL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\r\n    TIMEOUT: 15000\r\n};\r\n\r\nconst STORAGE_KEYS = {\r\n    TOKEN: 'token',\r\n    USER_ID: 'userId',\r\n    USER: 'user',\r\n    REFRESH_TOKEN: 'refreshToken',\r\n    LAST_ACTIVE: 'lastActive'\r\n};\r\n\r\n// API Instance\r\nconst Api = axios.create({\r\n    baseURL: API_CONFIG.BASE_URL,\r\n    timeout: API_CONFIG.TIMEOUT,\r\n    withCredentials: true,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n    }\r\n});\r\n\r\n// Helper Functions\r\nconst clearStorage = () => {\r\n    Object.values(STORAGE_KEYS).forEach(key => localStorage.removeItem(key));\r\n    sessionStorage.clear();\r\n};\r\n\r\n// API Functions\r\nexport const loginApi = async (data) => {\r\n    try {\r\n        const response = await Api.post('/users/login', data);\r\n        if (response.data?.data) {\r\n            const { user, token, refreshToken } = response.data.data;\r\n            localStorage.setItem(STORAGE_KEYS.TOKEN, token);\r\n            localStorage.setItem(STORAGE_KEYS.USER_ID, user._id);\r\n            localStorage.setItem(STORAGE_KEYS.USER, JSON.stringify(user));\r\n            localStorage.setItem(STORAGE_KEYS.REFRESH_TOKEN, refreshToken);\r\n            localStorage.setItem(STORAGE_KEYS.LAST_ACTIVE, new Date().toISOString());\r\n        }\r\n        return response.data;\r\n    } catch (error) {\r\n        throw handleApiError(error);\r\n    }\r\n};\r\n\r\nexport const signupApi = async (data) => {\r\n    try {\r\n        const response = await Api.post('/users/signup', data);\r\n        return response.data;\r\n    } catch (error) {\r\n        throw handleApiError(error);\r\n    }\r\n};\r\n\r\nexport const getUserProfile = async () => {\r\n    try {\r\n        const userId = localStorage.getItem(STORAGE_KEYS.USER_ID);\r\n        const response = await Api.get(`/users/profile/${userId}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        throw handleApiError(error);\r\n    }\r\n};\r\n\r\nexport const updateUserProfile = async (userData) => {\r\n    try {\r\n        const response = await Api.put('/users/profile/update', userData);\r\n        return response.data;\r\n    } catch (error) {\r\n        throw handleApiError(error);\r\n    }\r\n};\r\n\r\nexport const changePassword = async (passwordData) => {\r\n    try {\r\n        const response = await Api.put('/users/change-password', passwordData);\r\n        return response.data;\r\n    } catch (error) {\r\n        throw handleApiError(error);\r\n    }\r\n};\r\n\r\nexport const createConfession = async (confessionData) => {\r\n    try {\r\n        const response = await Api.post('/confessions/create', confessionData);\r\n        return response.data;\r\n    } catch (error) {\r\n        throw handleApiError(error);\r\n    }\r\n};\r\n\r\n// Utility Functions\r\nexport const isLoggedIn = () => {\r\n    const token = localStorage.getItem(STORAGE_KEYS.TOKEN);\r\n    return !!token;\r\n};\r\n\r\nexport const logout = () => {\r\n    clearStorage();\r\n    window.location.href = '/login';\r\n};\r\n\r\n// Error Handler\r\nconst handleApiError = (error) => {\r\n    const message = error.response?.data?.message || error.message;\r\n    toast.error(message);\r\n    return {\r\n        message,\r\n        status: error.response?.status,\r\n        data: error.response?.data\r\n    };\r\n};\r\n\r\nexport default Api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}