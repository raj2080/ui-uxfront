{"ast":null,"code":"var _jsxFileName = \"C:\\\\uiux development\\\\frontend\\\\confessapp\\\\src\\\\pages\\\\profile\\\\Profilepage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getUserProfile, updateUserProfile, changePassword } from '../../apis/Api';\nimport { useNavigate } from 'react-router-dom';\nimport './Profilepage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Profilepage = () => {\n  _s();\n  const [userData, setUserData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n  const [currentDateTime, setCurrentDateTime] = useState('');\n  const [formData, setFormData] = useState({\n    nickname: '',\n    email: ''\n  });\n\n  // Password change state\n  const [showPasswordSection, setShowPasswordSection] = useState(false);\n  const [passwordLoading, setPasswordLoading] = useState(false);\n  const [passwordData, setPasswordData] = useState({\n    currentPassword: '',\n    newPassword: '',\n    confirmPassword: ''\n  });\n  const [passwordError, setPasswordError] = useState('');\n  const [passwordSuccess, setPasswordSuccess] = useState('');\n  const navigate = useNavigate();\n\n  // Define fetchUserProfile outside useEffect so it can be reused\n  const fetchUserProfile = async () => {\n    try {\n      const storedUser = JSON.parse(localStorage.getItem('user'));\n      if (!storedUser) {\n        throw new Error('User data not found');\n      }\n      const response = await getUserProfile();\n      if (response.data) {\n        setUserData(response.data);\n        setFormData({\n          nickname: response.data.nickname,\n          email: response.data.email\n        });\n      }\n    } catch (err) {\n      console.error('Profile fetch error:', err);\n      setError('Could not load profile data. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchUserProfile();\n    const updateDateTime = () => {\n      const now = new Date();\n      const formattedDateTime = now.toISOString().slice(0, 19).replace('T', ' ');\n      setCurrentDateTime(formattedDateTime);\n    };\n    updateDateTime();\n    const timer = setInterval(updateDateTime, 1000);\n    return () => clearInterval(timer);\n  }, [navigate]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleEdit = () => {\n    setIsEditing(true);\n    setFormData({\n      nickname: userData.nickname,\n      email: userData.email\n    });\n    setError(null);\n  };\n  const handleCancel = () => {\n    setIsEditing(false);\n    setFormData({\n      nickname: userData.nickname,\n      email: userData.email\n    });\n    setError(null);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await updateUserProfile(formData);\n      if (response.data.success) {\n        setUserData(response.data.user);\n        setIsEditing(false);\n        // Update localStorage\n        const storedUser = JSON.parse(localStorage.getItem('user'));\n        localStorage.setItem('user', JSON.stringify({\n          ...storedUser,\n          nickname: response.data.user.nickname,\n          email: response.data.user.email\n        }));\n      }\n    } catch (err) {\n      setError(err.message || 'Failed to update profile. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handlePasswordChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setPasswordData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handlePasswordSubmit = async e => {\n    e.preventDefault();\n    setPasswordError('');\n    setPasswordSuccess('');\n    if (passwordData.newPassword !== passwordData.confirmPassword) {\n      setPasswordError('New passwords do not match');\n      return;\n    }\n    if (passwordData.newPassword.length < 6) {\n      setPasswordError('New password must be at least 6 characters long');\n      return;\n    }\n    try {\n      setPasswordLoading(true);\n      const response = await changePassword({\n        currentPassword: passwordData.currentPassword,\n        newPassword: passwordData.newPassword\n      });\n      if (response.data.success) {\n        setPasswordSuccess('Password changed successfully');\n        setPasswordData({\n          currentPassword: '',\n          newPassword: '',\n          confirmPassword: ''\n        });\n\n        // Refresh user profile data after password change\n        await fetchUserProfile();\n\n        // Hide password section after success\n        setTimeout(() => {\n          setShowPasswordSection(false);\n          setPasswordSuccess('');\n        }, 2000);\n      }\n    } catch (error) {\n      setPasswordError(error.message || 'Failed to change password');\n    } finally {\n      setPasswordLoading(false);\n    }\n  };\n  const formatDate = dateString => {\n    if (!dateString) return '';\n    return new Date(dateString).toLocaleString('en-US', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit'\n    });\n  };\n  if (loading && !userData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading profile...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this);\n  }\n\n  // ... rest of your existing code (formatDate and render methods) ...\n\n  // Update the password form buttons to show loading state:\n  /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-actions\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"save-button\",\n      disabled: passwordLoading,\n      children: passwordLoading ? 'Updating Password...' : 'Update Password'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"cancel-button\",\n      onClick: () => {\n        setShowPasswordSection(false);\n        setPasswordData({\n          currentPassword: '',\n          newPassword: '',\n          confirmPassword: ''\n        });\n        setPasswordError('');\n      },\n      disabled: passwordLoading,\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 3\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"My Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"current-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"current-user\",\n              children: [\"Current User's Login: \", userData === null || userData === void 0 ? void 0 : userData.nickname]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"current-datetime\",\n              children: [\"Current Date and Time (UTC - YYYY-MM-DD HH:MM:SS formatted): \", currentDateTime]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), !isEditing && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"edit-button\",\n          onClick: handleEdit,\n          children: \"Edit Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this), userData && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-details\",\n          children: isEditing ? /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            className: \"profile-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"nickname\",\n                children: \"Nickname\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"nickname\",\n                name: \"nickname\",\n                value: formData.nickname,\n                onChange: handleInputChange,\n                required: true,\n                maxLength: \"10\",\n                pattern: \"^[a-zA-Z0-9_]+$\",\n                title: \"Nickname can only contain letters, numbers, and underscores\",\n                disabled: loading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                id: \"email\",\n                name: \"email\",\n                value: formData.email,\n                onChange: handleInputChange,\n                required: true,\n                disabled: loading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"save-button\",\n                disabled: loading,\n                children: loading ? 'Saving...' : 'Save Changes'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"cancel-button\",\n                onClick: handleCancel,\n                disabled: loading,\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Nickname\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: userData.nickname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: userData.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Last Updated\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: formatDate(userData.updatedAt)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"password-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Password Settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"toggle-password-button\",\n              onClick: () => setShowPasswordSection(!showPasswordSection),\n              children: showPasswordSection ? 'Hide' : 'Change Password'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 15\n          }, this), showPasswordSection && /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handlePasswordSubmit,\n            className: \"password-form\",\n            children: [passwordError && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error-message\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: passwordError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 21\n            }, this), passwordSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"success-message\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: passwordSuccess\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"currentPassword\",\n                children: \"Current Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                id: \"currentPassword\",\n                name: \"currentPassword\",\n                value: passwordData.currentPassword,\n                onChange: handlePasswordChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"newPassword\",\n                children: \"New Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                id: \"newPassword\",\n                name: \"newPassword\",\n                value: passwordData.newPassword,\n                onChange: handlePasswordChange,\n                required: true,\n                minLength: \"6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"confirmPassword\",\n                children: \"Confirm New Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                id: \"confirmPassword\",\n                name: \"confirmPassword\",\n                value: passwordData.confirmPassword,\n                onChange: handlePasswordChange,\n                required: true,\n                minLength: \"6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"save-button\",\n                children: \"Update Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"cancel-button\",\n                onClick: () => {\n                  setShowPasswordSection(false);\n                  setPasswordData({\n                    currentPassword: '',\n                    newPassword: '',\n                    confirmPassword: ''\n                  });\n                  setPasswordError('');\n                },\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 5\n  }, this);\n};\n_s(Profilepage, \"bl+IciJe1atRkHEg+PC3zvxQUtg=\", false, function () {\n  return [useNavigate];\n});\n_c = Profilepage;\nexport default Profilepage;\nvar _c;\n$RefreshReg$(_c, \"Profilepage\");","map":{"version":3,"names":["React","useEffect","useState","getUserProfile","updateUserProfile","changePassword","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Profilepage","_s","userData","setUserData","loading","setLoading","error","setError","isEditing","setIsEditing","currentDateTime","setCurrentDateTime","formData","setFormData","nickname","email","showPasswordSection","setShowPasswordSection","passwordLoading","setPasswordLoading","passwordData","setPasswordData","currentPassword","newPassword","confirmPassword","passwordError","setPasswordError","passwordSuccess","setPasswordSuccess","navigate","fetchUserProfile","storedUser","JSON","parse","localStorage","getItem","Error","response","data","err","console","updateDateTime","now","Date","formattedDateTime","toISOString","slice","replace","timer","setInterval","clearInterval","handleInputChange","e","name","value","target","prev","handleEdit","handleCancel","handleSubmit","preventDefault","success","user","setItem","stringify","message","handlePasswordChange","handlePasswordSubmit","length","setTimeout","formatDate","dateString","toLocaleString","year","month","day","hour","minute","second","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","disabled","onClick","onSubmit","htmlFor","id","onChange","required","maxLength","pattern","title","updatedAt","minLength","_c","$RefreshReg$"],"sources":["C:/uiux development/frontend/confessapp/src/pages/profile/Profilepage.jsx"],"sourcesContent":["\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getUserProfile, updateUserProfile, changePassword } from '../../apis/Api';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Profilepage.css';\r\n\r\nconst Profilepage = () => {\r\n  const [userData, setUserData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [currentDateTime, setCurrentDateTime] = useState('');\r\n  const [formData, setFormData] = useState({\r\n    nickname: '',\r\n    email: ''\r\n  });\r\n\r\n  // Password change state\r\n  const [showPasswordSection, setShowPasswordSection] = useState(false);\r\n  const [passwordLoading, setPasswordLoading] = useState(false);\r\n  const [passwordData, setPasswordData] = useState({\r\n    currentPassword: '',\r\n    newPassword: '',\r\n    confirmPassword: ''\r\n  });\r\n  const [passwordError, setPasswordError] = useState('');\r\n  const [passwordSuccess, setPasswordSuccess] = useState('');\r\n  \r\n  const navigate = useNavigate();\r\n\r\n  // Define fetchUserProfile outside useEffect so it can be reused\r\n  const fetchUserProfile = async () => {\r\n    try {\r\n      const storedUser = JSON.parse(localStorage.getItem('user'));\r\n      if (!storedUser) {\r\n        throw new Error('User data not found');\r\n      }\r\n\r\n      const response = await getUserProfile();\r\n      if (response.data) {\r\n        setUserData(response.data);\r\n        setFormData({\r\n          nickname: response.data.nickname,\r\n          email: response.data.email\r\n        });\r\n      }\r\n    } catch (err) {\r\n      console.error('Profile fetch error:', err);\r\n      setError('Could not load profile data. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchUserProfile();\r\n\r\n    const updateDateTime = () => {\r\n      const now = new Date();\r\n      const formattedDateTime = now.toISOString().slice(0, 19).replace('T', ' ');\r\n      setCurrentDateTime(formattedDateTime);\r\n    };\r\n\r\n    updateDateTime();\r\n    const timer = setInterval(updateDateTime, 1000);\r\n\r\n    return () => clearInterval(timer);\r\n  }, [navigate]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    setIsEditing(true);\r\n    setFormData({\r\n      nickname: userData.nickname,\r\n      email: userData.email\r\n    });\r\n    setError(null);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsEditing(false);\r\n    setFormData({\r\n      nickname: userData.nickname,\r\n      email: userData.email\r\n    });\r\n    setError(null);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      const response = await updateUserProfile(formData);\r\n      \r\n      if (response.data.success) {\r\n        setUserData(response.data.user);\r\n        setIsEditing(false);\r\n        // Update localStorage\r\n        const storedUser = JSON.parse(localStorage.getItem('user'));\r\n        localStorage.setItem('user', JSON.stringify({\r\n          ...storedUser,\r\n          nickname: response.data.user.nickname,\r\n          email: response.data.user.email\r\n        }));\r\n      }\r\n    } catch (err) {\r\n      setError(err.message || 'Failed to update profile. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handlePasswordChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setPasswordData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const handlePasswordSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setPasswordError('');\r\n    setPasswordSuccess('');\r\n\r\n    if (passwordData.newPassword !== passwordData.confirmPassword) {\r\n      setPasswordError('New passwords do not match');\r\n      return;\r\n    }\r\n\r\n    if (passwordData.newPassword.length < 6) {\r\n      setPasswordError('New password must be at least 6 characters long');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setPasswordLoading(true);\r\n      const response = await changePassword({\r\n        currentPassword: passwordData.currentPassword,\r\n        newPassword: passwordData.newPassword\r\n      });\r\n\r\n      if (response.data.success) {\r\n        setPasswordSuccess('Password changed successfully');\r\n        setPasswordData({\r\n          currentPassword: '',\r\n          newPassword: '',\r\n          confirmPassword: ''\r\n        });\r\n        \r\n        // Refresh user profile data after password change\r\n        await fetchUserProfile();\r\n\r\n        // Hide password section after success\r\n        setTimeout(() => {\r\n          setShowPasswordSection(false);\r\n          setPasswordSuccess('');\r\n        }, 2000);\r\n      }\r\n    } catch (error) {\r\n      setPasswordError(error.message || 'Failed to change password');\r\n    } finally {\r\n      setPasswordLoading(false);\r\n    }\r\n  };\r\n\r\n  \r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return '';\r\n    return new Date(dateString).toLocaleString('en-US', {\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit',\r\n      second: '2-digit'\r\n    });\r\n  };\r\n\r\n  if (loading && !userData) {\r\n    return (\r\n      <div className=\"profile-page\">\r\n        <div className=\"loading-spinner\">\r\n          <div className=\"spinner\"></div>\r\n          <p>Loading profile...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // ... rest of your existing code (formatDate and render methods) ...\r\n\r\n  // Update the password form buttons to show loading state:\r\n  <div className=\"form-actions\">\r\n    <button \r\n      type=\"submit\" \r\n      className=\"save-button\"\r\n      disabled={passwordLoading}\r\n    >\r\n      {passwordLoading ? 'Updating Password...' : 'Update Password'}\r\n    </button>\r\n    <button \r\n      type=\"button\" \r\n      className=\"cancel-button\"\r\n      onClick={() => {\r\n        setShowPasswordSection(false);\r\n        setPasswordData({\r\n          currentPassword: '',\r\n          newPassword: '',\r\n          confirmPassword: ''\r\n        });\r\n        setPasswordError('');\r\n      }}\r\n      disabled={passwordLoading}\r\n    >\r\n      Cancel\r\n    </button>\r\n  </div>\r\n\r\n  return (\r\n    <div className=\"profile-page\">\r\n      <div className=\"profile-container\">\r\n        <div className=\"profile-header\">\r\n          <div className=\"header-content\">\r\n            <h1>My Profile</h1>\r\n            <div className=\"current-info\">\r\n              <p className=\"current-user\">Current User's Login: {userData?.nickname}</p>\r\n              <p className=\"current-datetime\">Current Date and Time (UTC - YYYY-MM-DD HH:MM:SS formatted): {currentDateTime}</p>\r\n            </div>\r\n          </div>\r\n          {!isEditing && (\r\n            <button className=\"edit-button\" onClick={handleEdit}>\r\n              Edit Profile\r\n            </button>\r\n          )}\r\n        </div>\r\n\r\n        {error && (\r\n          <div className=\"error-message\">\r\n            <p>{error}</p>\r\n          </div>\r\n        )}\r\n\r\n        {userData && (\r\n          <>\r\n            <div className=\"profile-details\">\r\n              {isEditing ? (\r\n                <form onSubmit={handleSubmit} className=\"profile-form\">\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"nickname\">Nickname</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"nickname\"\r\n                      name=\"nickname\"\r\n                      value={formData.nickname}\r\n                      onChange={handleInputChange}\r\n                      required\r\n                      maxLength=\"10\"\r\n                      pattern=\"^[a-zA-Z0-9_]+$\"\r\n                      title=\"Nickname can only contain letters, numbers, and underscores\"\r\n                      disabled={loading}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input\r\n                      type=\"email\"\r\n                      id=\"email\"\r\n                      name=\"email\"\r\n                      value={formData.email}\r\n                      onChange={handleInputChange}\r\n                      required\r\n                      disabled={loading}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"form-actions\">\r\n                    <button \r\n                      type=\"submit\" \r\n                      className=\"save-button\"\r\n                      disabled={loading}\r\n                    >\r\n                      {loading ? 'Saving...' : 'Save Changes'}\r\n                    </button>\r\n                    <button \r\n                      type=\"button\" \r\n                      className=\"cancel-button\"\r\n                      onClick={handleCancel}\r\n                      disabled={loading}\r\n                    >\r\n                      Cancel\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              ) : (\r\n                <div className=\"profile-info\">\r\n                  <div className=\"info-group\">\r\n                    <label>Nickname</label>\r\n                    <p>{userData.nickname}</p>\r\n                  </div>\r\n\r\n                  <div className=\"info-group\">\r\n                    <label>Email</label>\r\n                    <p>{userData.email}</p>\r\n                  </div>\r\n\r\n                  <div className=\"info-group\">\r\n                    <label>Last Updated</label>\r\n                    <p>{formatDate(userData.updatedAt)}</p>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Password Change Section */}\r\n            <div className=\"password-section\">\r\n              <div className=\"section-header\">\r\n                <h2>Password Settings</h2>\r\n                <button \r\n                  className=\"toggle-password-button\"\r\n                  onClick={() => setShowPasswordSection(!showPasswordSection)}\r\n                >\r\n                  {showPasswordSection ? 'Hide' : 'Change Password'}\r\n                </button>\r\n              </div>\r\n\r\n              {showPasswordSection && (\r\n                <form onSubmit={handlePasswordSubmit} className=\"password-form\">\r\n                  {passwordError && (\r\n                    <div className=\"error-message\">\r\n                      <p>{passwordError}</p>\r\n                    </div>\r\n                  )}\r\n                  {passwordSuccess && (\r\n                    <div className=\"success-message\">\r\n                      <p>{passwordSuccess}</p>\r\n                    </div>\r\n                  )}\r\n\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"currentPassword\">Current Password</label>\r\n                    <input\r\n                      type=\"password\"\r\n                      id=\"currentPassword\"\r\n                      name=\"currentPassword\"\r\n                      value={passwordData.currentPassword}\r\n                      onChange={handlePasswordChange}\r\n                      required\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"newPassword\">New Password</label>\r\n                    <input\r\n                      type=\"password\"\r\n                      id=\"newPassword\"\r\n                      name=\"newPassword\"\r\n                      value={passwordData.newPassword}\r\n                      onChange={handlePasswordChange}\r\n                      required\r\n                      minLength=\"6\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"confirmPassword\">Confirm New Password</label>\r\n                    <input\r\n                      type=\"password\"\r\n                      id=\"confirmPassword\"\r\n                      name=\"confirmPassword\"\r\n                      value={passwordData.confirmPassword}\r\n                      onChange={handlePasswordChange}\r\n                      required\r\n                      minLength=\"6\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"form-actions\">\r\n                    <button type=\"submit\" className=\"save-button\">\r\n                      Update Password\r\n                    </button>\r\n                    <button \r\n                      type=\"button\" \r\n                      className=\"cancel-button\"\r\n                      onClick={() => {\r\n                        setShowPasswordSection(false);\r\n                        setPasswordData({\r\n                          currentPassword: '',\r\n                          newPassword: '',\r\n                          confirmPassword: ''\r\n                        });\r\n                        setPasswordError('');\r\n                      }}\r\n                    >\r\n                      Cancel\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              )}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default Profilepage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}