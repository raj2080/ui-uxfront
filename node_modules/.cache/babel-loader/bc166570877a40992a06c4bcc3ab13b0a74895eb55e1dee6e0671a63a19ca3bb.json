{"ast":null,"code":"// In your Api.js, add a debug log to check the token and userId\nexport const updateUserProfile = async userData => {\n  try {\n    // Debug logs\n    console.log('Stored token:', localStorage.getItem('token'));\n    console.log('Stored userId:', localStorage.getItem('userId'));\n    console.log('Update data being sent:', userData);\n    const response = await Api.put('users/profile/update', userData);\n    if (response.data && response.data.success) {\n      const updatedUser = response.data.user;\n\n      // Update stored user data with new information\n      const currentUser = JSON.parse(localStorage.getItem('user') || '{}');\n      const newUserData = {\n        ...currentUser,\n        nickname: updatedUser.nickname,\n        email: updatedUser.email,\n        updatedAt: updatedUser.updatedAt\n      };\n      localStorage.setItem('user', JSON.stringify(newUserData));\n    }\n    return response;\n  } catch (error) {\n    var _error$response, _error$response$data, _error$response2, _error$response3, _error$response4, _error$response5, _error$response5$data, _error$response6, _error$response7;\n    console.error('Profile update error details:', {\n      message: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message,\n      status: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status,\n      data: (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data\n    });\n    if (((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status) === 401) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('userId');\n      localStorage.removeItem('user');\n    }\n    throw {\n      message: ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || 'Failed to update profile',\n      status: (_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.status,\n      data: (_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data\n    };\n  }\n};","map":{"version":3,"names":["updateUserProfile","userData","console","log","localStorage","getItem","response","Api","put","data","success","updatedUser","user","currentUser","JSON","parse","newUserData","nickname","email","updatedAt","setItem","stringify","error","_error$response","_error$response$data","_error$response2","_error$response3","_error$response4","_error$response5","_error$response5$data","_error$response6","_error$response7","message","status","removeItem"],"sources":["C:/uiux development/frontend/confessapp/src/apis/Api.js"],"sourcesContent":["// In your Api.js, add a debug log to check the token and userId\r\nexport const updateUserProfile = async (userData) => {\r\n    try {\r\n        // Debug logs\r\n        console.log('Stored token:', localStorage.getItem('token'));\r\n        console.log('Stored userId:', localStorage.getItem('userId'));\r\n        console.log('Update data being sent:', userData);\r\n\r\n        const response = await Api.put('users/profile/update', userData);\r\n        \r\n        if (response.data && response.data.success) {\r\n            const updatedUser = response.data.user;\r\n            \r\n            // Update stored user data with new information\r\n            const currentUser = JSON.parse(localStorage.getItem('user') || '{}');\r\n            const newUserData = {\r\n                ...currentUser,\r\n                nickname: updatedUser.nickname,\r\n                email: updatedUser.email,\r\n                updatedAt: updatedUser.updatedAt\r\n            };\r\n            \r\n            localStorage.setItem('user', JSON.stringify(newUserData));\r\n        }\r\n\r\n        return response;\r\n    } catch (error) {\r\n        console.error('Profile update error details:', {\r\n            message: error.response?.data?.message,\r\n            status: error.response?.status,\r\n            data: error.response?.data\r\n        });\r\n        \r\n        if (error.response?.status === 401) {\r\n            localStorage.removeItem('token');\r\n            localStorage.removeItem('userId');\r\n            localStorage.removeItem('user');\r\n        }\r\n        \r\n        throw {\r\n            message: error.response?.data?.message || 'Failed to update profile',\r\n            status: error.response?.status,\r\n            data: error.response?.data\r\n        };\r\n    }\r\n};"],"mappings":"AAAA;AACA,OAAO,MAAMA,iBAAiB,GAAG,MAAOC,QAAQ,IAAK;EACjD,IAAI;IACA;IACAC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;IAC3DH,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC;IAC7DH,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,QAAQ,CAAC;IAEhD,MAAMK,QAAQ,GAAG,MAAMC,GAAG,CAACC,GAAG,CAAC,sBAAsB,EAAEP,QAAQ,CAAC;IAEhE,IAAIK,QAAQ,CAACG,IAAI,IAAIH,QAAQ,CAACG,IAAI,CAACC,OAAO,EAAE;MACxC,MAAMC,WAAW,GAAGL,QAAQ,CAACG,IAAI,CAACG,IAAI;;MAEtC;MACA,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACX,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC;MACpE,MAAMW,WAAW,GAAG;QAChB,GAAGH,WAAW;QACdI,QAAQ,EAAEN,WAAW,CAACM,QAAQ;QAC9BC,KAAK,EAAEP,WAAW,CAACO,KAAK;QACxBC,SAAS,EAAER,WAAW,CAACQ;MAC3B,CAAC;MAEDf,YAAY,CAACgB,OAAO,CAAC,MAAM,EAAEN,IAAI,CAACO,SAAS,CAACL,WAAW,CAAC,CAAC;IAC7D;IAEA,OAAOV,QAAQ;EACnB,CAAC,CAAC,OAAOgB,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,oBAAA,EAAAC,gBAAA,EAAAC,gBAAA,EAAAC,gBAAA,EAAAC,gBAAA,EAAAC,qBAAA,EAAAC,gBAAA,EAAAC,gBAAA;IACZ7B,OAAO,CAACoB,KAAK,CAAC,+BAA+B,EAAE;MAC3CU,OAAO,GAAAT,eAAA,GAAED,KAAK,CAAChB,QAAQ,cAAAiB,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBd,IAAI,cAAAe,oBAAA,uBAApBA,oBAAA,CAAsBQ,OAAO;MACtCC,MAAM,GAAAR,gBAAA,GAAEH,KAAK,CAAChB,QAAQ,cAAAmB,gBAAA,uBAAdA,gBAAA,CAAgBQ,MAAM;MAC9BxB,IAAI,GAAAiB,gBAAA,GAAEJ,KAAK,CAAChB,QAAQ,cAAAoB,gBAAA,uBAAdA,gBAAA,CAAgBjB;IAC1B,CAAC,CAAC;IAEF,IAAI,EAAAkB,gBAAA,GAAAL,KAAK,CAAChB,QAAQ,cAAAqB,gBAAA,uBAAdA,gBAAA,CAAgBM,MAAM,MAAK,GAAG,EAAE;MAChC7B,YAAY,CAAC8B,UAAU,CAAC,OAAO,CAAC;MAChC9B,YAAY,CAAC8B,UAAU,CAAC,QAAQ,CAAC;MACjC9B,YAAY,CAAC8B,UAAU,CAAC,MAAM,CAAC;IACnC;IAEA,MAAM;MACFF,OAAO,EAAE,EAAAJ,gBAAA,GAAAN,KAAK,CAAChB,QAAQ,cAAAsB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBnB,IAAI,cAAAoB,qBAAA,uBAApBA,qBAAA,CAAsBG,OAAO,KAAI,0BAA0B;MACpEC,MAAM,GAAAH,gBAAA,GAAER,KAAK,CAAChB,QAAQ,cAAAwB,gBAAA,uBAAdA,gBAAA,CAAgBG,MAAM;MAC9BxB,IAAI,GAAAsB,gBAAA,GAAET,KAAK,CAAChB,QAAQ,cAAAyB,gBAAA,uBAAdA,gBAAA,CAAgBtB;IAC1B,CAAC;EACL;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}