{"ast":null,"code":"// Generated by CoffeeScript 1.10.0\nvar feedback, matching, scoring, time, time_estimates, zxcvbn;\nmatching = require('./matching');\nscoring = require('./scoring');\ntime_estimates = require('./time_estimates');\nfeedback = require('./feedback');\ntime = function () {\n  return new Date().getTime();\n};\nzxcvbn = function (password, user_inputs) {\n  var arg, attack_times, i, len, matches, prop, ref, result, sanitized_inputs, start, val;\n  if (user_inputs == null) {\n    user_inputs = [];\n  }\n  start = time();\n  sanitized_inputs = [];\n  for (i = 0, len = user_inputs.length; i < len; i++) {\n    arg = user_inputs[i];\n    if ((ref = typeof arg) === \"string\" || ref === \"number\" || ref === \"boolean\") {\n      sanitized_inputs.push(arg.toString().toLowerCase());\n    }\n  }\n  matching.set_user_input_dictionary(sanitized_inputs);\n  matches = matching.omnimatch(password);\n  result = scoring.most_guessable_match_sequence(password, matches);\n  result.calc_time = time() - start;\n  attack_times = time_estimates.estimate_attack_times(result.guesses);\n  for (prop in attack_times) {\n    val = attack_times[prop];\n    result[prop] = val;\n  }\n  result.feedback = feedback.get_feedback(result.score, result.sequence);\n  return result;\n};\nmodule.exports = zxcvbn;","map":{"version":3,"names":["feedback","matching","scoring","time","time_estimates","zxcvbn","require","Date","getTime","password","user_inputs","arg","attack_times","i","len","matches","prop","ref","result","sanitized_inputs","start","val","length","push","toString","toLowerCase","set_user_input_dictionary","omnimatch","most_guessable_match_sequence","calc_time","estimate_attack_times","guesses","get_feedback","score","sequence","module","exports"],"sources":["C:\\uiux development\\frontend\\confessapp\\node_modules\\zxcvbn\\src\\main.coffee"],"sourcesContent":["matching = require './matching'\nscoring = require './scoring'\ntime_estimates = require './time_estimates'\nfeedback = require './feedback'\n\ntime = -> (new Date()).getTime()\n\nzxcvbn = (password, user_inputs = []) ->\n  start = time()\n  # reset the user inputs matcher on a per-request basis to keep things stateless\n  sanitized_inputs = []\n  for arg in user_inputs\n    if typeof arg in [\"string\", \"number\", \"boolean\"]\n      sanitized_inputs.push arg.toString().toLowerCase()\n  matching.set_user_input_dictionary sanitized_inputs\n  matches = matching.omnimatch password\n  result = scoring.most_guessable_match_sequence password, matches\n  result.calc_time = time() - start\n  attack_times = time_estimates.estimate_attack_times result.guesses\n  for prop, val of attack_times\n    result[prop] = val\n  result.feedback = feedback.get_feedback result.score, result.sequence\n  result\n\nmodule.exports = zxcvbn\n"],"mappings":";AAAA,IAAAA,QAAA,EAAAC,QAAA,EAAAC,OAAA,EAAAC,IAAA,EAAAC,cAAA,EAAAC,MAAA;AAAAJ,QAAA,GAAWK,OAAA,CAAQ,YAAR;AACXJ,OAAA,GAAUI,OAAA,CAAQ,WAAR;AACVF,cAAA,GAAiBE,OAAA,CAAQ,kBAAR;AACjBN,QAAA,GAAWM,OAAA,CAAQ,YAAR;AAEXH,IAAA,GAAO,SAAAA,CAAA;SAAQ,IAAAI,IAAA,EAAL,CAAaC,OAAb;AAAH;AAEPH,MAAA,GAAS,SAAAA,CAACI,QAAD,EAAWC,WAAX;EACP,IAAAC,GAAA,EAAAC,YAAA,EAAAC,CAAA,EAAAC,GAAA,EAAAC,OAAA,EAAAC,IAAA,EAAAC,GAAA,EAAAC,MAAA,EAAAC,gBAAA,EAAAC,KAAA,EAAAC,GAAA;;IADkBX,WAAA,GAAc;;EAChCU,KAAA,GAAQjB,IAAA;EAERgB,gBAAA,GAAmB;EACnB,KAAAN,CAAA,MAAAC,GAAA,GAAAJ,WAAA,CAAAY,MAAA,EAAAT,CAAA,GAAAC,GAAA,EAAAD,CAAA;;IACE,KAAAI,GAAA,GAAG,OAAON,GAAA,MAAQ,QAAf,IAAAM,GAAA,KAAyB,QAAzB,IAAAA,GAAA,KAAmC,SAAtC;MACEE,gBAAgB,CAACI,IAAjB,CAAsBZ,GAAG,CAACa,QAAJ,EAAc,CAACC,WAAf,EAAtB;;EAFJ;EAGAxB,QAAQ,CAACyB,yBAAT,CAAmCP,gBAAnC;EACAJ,OAAA,GAAUd,QAAQ,CAAC0B,SAAT,CAAmBlB,QAAnB;EACVS,MAAA,GAAShB,OAAO,CAAC0B,6BAAR,CAAsCnB,QAAtC,EAAgDM,OAAhD;EACTG,MAAM,CAACW,SAAP,GAAmB1B,IAAA,KAASiB,KAAA;EAC5BR,YAAA,GAAeR,cAAc,CAAC0B,qBAAf,CAAqCZ,MAAM,CAACa,OAA5C;EACf,KAAAf,IAAA,IAAAJ,YAAA;;IACEM,MAAO,CAAAF,IAAA,CAAP,GAAeK,GAAA;EADjB;EAEAH,MAAM,CAAClB,QAAP,GAAkBA,QAAQ,CAACgC,YAAT,CAAsBd,MAAM,CAACe,KAA7B,EAAoCf,MAAM,CAACgB,QAA3C;SAClBhB,MAAA;AAfO;AAiBTiB,MAAM,CAACC,OAAP,GAAiB/B,MAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}