{"ast":null,"code":"var _jsxFileName = \"C:\\\\uiux development\\\\frontend\\\\confessapp\\\\src\\\\pages\\\\confession\\\\CreateConfession.jsx\",\n  _s = $RefreshSig$();\n// src/pages/confession/CreateConfession.jsx\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { createConfession } from '../../apis/Api';\nimport './CreateConfession.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateConfession = () => {\n  _s();\n  const navigate = useNavigate();\n\n  // Constants for current user and time\n  const CURRENT_USER = '2025raj';\n  const CURRENT_DATETIME = '2025-01-20 20:31:11';\n  const [formData, setFormData] = useState({\n    title: '',\n    content: '',\n    category: 'Personal',\n    image: null,\n    author: CURRENT_USER,\n    timestamp: CURRENT_DATETIME\n  });\n  const [errors, setErrors] = useState({\n    title: '',\n    content: '',\n    category: '',\n    image: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [imagePreview, setImagePreview] = useState(null);\n\n  // Constants\n  const MAX_TITLE_LENGTH = 100;\n  const MIN_TITLE_LENGTH = 5;\n  const MAX_CONTENT_LENGTH = 5000;\n  const MIN_CONTENT_LENGTH = 10;\n  const MAX_IMAGE_SIZE = 5 * 1024 * 1024; // 5MB\n  const ALLOWED_IMAGE_TYPES = ['image/jpeg', 'image/png', 'image/gif', 'image/webp'];\n  const categories = ['Personal', 'Relationship', 'Work', 'Family', 'School', 'Other'];\n\n  // Check authentication and debug logging\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/login', {\n        state: {\n          from: '/create-confession'\n        }\n      });\n    }\n    if (process.env.NODE_ENV === 'development') {\n      console.log('CreateConfession component mounted');\n      console.log('Current User:', CURRENT_USER);\n      console.log('Current DateTime:', CURRENT_DATETIME);\n    }\n  }, [navigate]);\n\n  // Validation functions\n  const validateTitle = title => {\n    if (!title.trim()) {\n      return 'Title is required';\n    }\n    if (title.trim().length < MIN_TITLE_LENGTH) {\n      return `Title must be at least ${MIN_TITLE_LENGTH} characters`;\n    }\n    if (title.length > MAX_TITLE_LENGTH) {\n      return `Title cannot exceed ${MAX_TITLE_LENGTH} characters`;\n    }\n    if (!/^[a-zA-Z0-9\\s.,!?-]+$/.test(title)) {\n      return 'Title contains invalid characters';\n    }\n    return '';\n  };\n  const validateContent = content => {\n    if (!content.trim()) {\n      return 'Content is required';\n    }\n    if (content.trim().length < MIN_CONTENT_LENGTH) {\n      return `Content must be at least ${MIN_CONTENT_LENGTH} characters`;\n    }\n    if (content.length > MAX_CONTENT_LENGTH) {\n      return `Content cannot exceed ${MAX_CONTENT_LENGTH} characters`;\n    }\n    return '';\n  };\n  const validateCategory = category => {\n    if (!categories.includes(category)) {\n      return 'Please select a valid category';\n    }\n    return '';\n  };\n  const validateImage = file => {\n    if (file) {\n      if (!ALLOWED_IMAGE_TYPES.includes(file.type)) {\n        return 'Invalid image format. Please use JPEG, PNG, GIF, or WebP';\n      }\n      if (file.size > MAX_IMAGE_SIZE) {\n        return 'Image size should be less than 5MB';\n      }\n    }\n    return '';\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n\n    // Real-time validation\n    let error = '';\n    switch (name) {\n      case 'title':\n        error = validateTitle(value);\n        break;\n      case 'content':\n        error = validateContent(value);\n        break;\n      case 'category':\n        error = validateCategory(value);\n        break;\n      default:\n        break;\n    }\n    setErrors(prev => ({\n      ...prev,\n      [name]: error\n    }));\n  };\n  const handleImageChange = e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    const imageError = validateImage(file);\n    if (imageError) {\n      toast.error(imageError);\n      e.target.value = '';\n      return;\n    }\n    setFormData(prev => ({\n      ...prev,\n      image: file\n    }));\n    setErrors(prev => ({\n      ...prev,\n      image: ''\n    }));\n\n    // Create image preview\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      setImagePreview(reader.result);\n    };\n    reader.readAsDataURL(file);\n  };\n  const validateForm = () => {\n    const newErrors = {\n      title: validateTitle(formData.title),\n      content: validateContent(formData.content),\n      category: validateCategory(formData.category),\n      image: validateImage(formData.image)\n    };\n    setErrors(newErrors);\n    return !Object.values(newErrors).some(error => error !== '');\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateForm()) {\n      const errorMessages = Object.values(errors).filter(error => error !== '');\n      errorMessages.forEach(error => toast.error(error));\n      return;\n    }\n    setLoading(true);\n    try {\n      if (process.env.NODE_ENV === 'development') {\n        console.log('Submitting confession:', {\n          ...formData,\n          image: formData.image ? 'Image file present' : 'No image'\n        });\n      }\n      const response = await createConfession({\n        title: formData.title.trim(),\n        content: formData.content.trim(),\n        category: formData.category,\n        image: formData.image,\n        author: CURRENT_USER,\n        timestamp: CURRENT_DATETIME\n      });\n    } catch (error) {\n      console.error('Error creating confession:', error);\n      toast.error(error.message || 'Failed to create confession');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const resetForm = () => {\n    const confirmReset = window.confirm('Are you sure you want to reset the form? All entered data will be lost.');\n    if (confirmReset) {\n      setFormData({\n        title: '',\n        content: '',\n        category: 'Personal',\n        image: null,\n        author: CURRENT_USER,\n        timestamp: CURRENT_DATETIME\n      });\n      setErrors({\n        title: '',\n        content: '',\n        category: '',\n        image: ''\n      });\n      setImagePreview(null);\n      if (document.getElementById('image')) {\n        document.getElementById('image').value = '';\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-confession-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"confession-form-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"confession-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Share Your Confession\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Express yourself freely and securely\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"confession-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"title\",\n            children: [\"Title\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `character-count ${formData.title.length > MAX_TITLE_LENGTH * 0.9 ? 'near-limit' : ''}`,\n              children: [formData.title.length, \"/\", MAX_TITLE_LENGTH]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"title\",\n            name: \"title\",\n            value: formData.title,\n            onChange: handleInputChange,\n            required: true,\n            maxLength: MAX_TITLE_LENGTH,\n            placeholder: \"Give your confession a title\",\n            className: `form-input ${errors.title ? 'error' : ''}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 25\n          }, this), errors.title && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-message\",\n            children: errors.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 42\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"content\",\n            children: [\"Your Confession\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `character-count ${formData.content.length > MAX_CONTENT_LENGTH * 0.9 ? 'near-limit' : ''}`,\n              children: [formData.content.length, \"/\", MAX_CONTENT_LENGTH]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"content\",\n            name: \"content\",\n            value: formData.content,\n            onChange: handleInputChange,\n            required: true,\n            maxLength: MAX_CONTENT_LENGTH,\n            placeholder: \"Share your thoughts...\",\n            className: `form-textarea ${errors.content ? 'error' : ''}`,\n            rows: \"6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 25\n          }, this), errors.content && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-message\",\n            children: errors.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 44\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"category\",\n            children: \"Select Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"category\",\n            name: \"category\",\n            value: formData.category,\n            onChange: handleInputChange,\n            required: true,\n            className: `form-select ${errors.category ? 'error' : ''}`,\n            children: categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: category,\n              children: category\n            }, category, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 25\n          }, this), errors.category && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-message\",\n            children: errors.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group file-upload-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"image\",\n            children: [\"Add Image (optional)\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"file-info\",\n              children: \"Accepted formats: JPEG, PNG, GIF, WebP (Max: 5MB)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              id: \"image\",\n              name: \"image\",\n              accept: ALLOWED_IMAGE_TYPES.join(','),\n              onChange: handleImageChange,\n              className: `form-input-file ${errors.image ? 'error' : ''}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 29\n            }, this), formData.image && /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => {\n                setImagePreview(null);\n                setFormData(prev => ({\n                  ...prev,\n                  image: null\n                }));\n                document.getElementById('image').value = '';\n                setErrors(prev => ({\n                  ...prev,\n                  image: ''\n                }));\n              },\n              className: \"file-remove-btn\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-times\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 37\n              }, this), \"Remove\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 25\n          }, this), errors.image && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-message\",\n            children: errors.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 42\n          }, this), imagePreview && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-preview\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: imagePreview,\n              alt: \"Preview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: `submit-button ${loading ? 'loading' : ''}`,\n            disabled: loading || Object.values(errors).some(error => error !== ''),\n            children: loading ? 'Creating...' : 'Share Confession'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"reset-button\",\n            onClick: resetForm,\n            disabled: loading,\n            children: \"Reset Form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 241,\n    columnNumber: 9\n  }, this);\n};\n_s(CreateConfession, \"U1Q2MF6eeMUquTGQi4SQlNk5TIU=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateConfession;\nexport default CreateConfession;\nvar _c;\n$RefreshReg$(_c, \"CreateConfession\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","toast","createConfession","jsxDEV","_jsxDEV","CreateConfession","_s","navigate","CURRENT_USER","CURRENT_DATETIME","formData","setFormData","title","content","category","image","author","timestamp","errors","setErrors","loading","setLoading","imagePreview","setImagePreview","MAX_TITLE_LENGTH","MIN_TITLE_LENGTH","MAX_CONTENT_LENGTH","MIN_CONTENT_LENGTH","MAX_IMAGE_SIZE","ALLOWED_IMAGE_TYPES","categories","token","localStorage","getItem","state","from","process","env","NODE_ENV","console","log","validateTitle","trim","length","test","validateContent","validateCategory","includes","validateImage","file","type","size","handleInputChange","e","name","value","target","prev","error","handleImageChange","files","imageError","reader","FileReader","onloadend","result","readAsDataURL","validateForm","newErrors","Object","values","some","handleSubmit","preventDefault","errorMessages","filter","forEach","response","message","resetForm","confirmReset","window","confirm","document","getElementById","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","onChange","required","maxLength","placeholder","rows","map","accept","join","onClick","src","alt","disabled","_c","$RefreshReg$"],"sources":["C:/uiux development/frontend/confessapp/src/pages/confession/CreateConfession.jsx"],"sourcesContent":["// src/pages/confession/CreateConfession.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { createConfession } from '../../apis/Api';\r\nimport './CreateConfession.css';\r\n\r\nconst CreateConfession = () => {\r\n    const navigate = useNavigate();\r\n    \r\n    // Constants for current user and time\r\n    const CURRENT_USER = '2025raj';\r\n    const CURRENT_DATETIME = '2025-01-20 20:31:11';\r\n\r\n    const [formData, setFormData] = useState({\r\n        title: '',\r\n        content: '',\r\n        category: 'Personal',\r\n        image: null,\r\n        author: CURRENT_USER,\r\n        timestamp: CURRENT_DATETIME\r\n    });\r\n\r\n    const [errors, setErrors] = useState({\r\n        title: '',\r\n        content: '',\r\n        category: '',\r\n        image: ''\r\n    });\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [imagePreview, setImagePreview] = useState(null);\r\n\r\n    // Constants\r\n    const MAX_TITLE_LENGTH = 100;\r\n    const MIN_TITLE_LENGTH = 5;\r\n    const MAX_CONTENT_LENGTH = 5000;\r\n    const MIN_CONTENT_LENGTH = 10;\r\n    const MAX_IMAGE_SIZE = 5 * 1024 * 1024; // 5MB\r\n    const ALLOWED_IMAGE_TYPES = ['image/jpeg', 'image/png', 'image/gif', 'image/webp'];\r\n\r\n    const categories = [\r\n        'Personal',\r\n        'Relationship',\r\n        'Work',\r\n        'Family',\r\n        'School',\r\n        'Other'\r\n    ];\r\n\r\n    // Check authentication and debug logging\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n            navigate('/login', { \r\n                state: { from: '/create-confession' }\r\n            });\r\n        }\r\n\r\n        if (process.env.NODE_ENV === 'development') {\r\n            console.log('CreateConfession component mounted');\r\n            console.log('Current User:', CURRENT_USER);\r\n            console.log('Current DateTime:', CURRENT_DATETIME);\r\n        }\r\n    }, [navigate]);\r\n\r\n    // Validation functions\r\n    const validateTitle = (title) => {\r\n        if (!title.trim()) {\r\n            return 'Title is required';\r\n        }\r\n        if (title.trim().length < MIN_TITLE_LENGTH) {\r\n            return `Title must be at least ${MIN_TITLE_LENGTH} characters`;\r\n        }\r\n        if (title.length > MAX_TITLE_LENGTH) {\r\n            return `Title cannot exceed ${MAX_TITLE_LENGTH} characters`;\r\n        }\r\n        if (!/^[a-zA-Z0-9\\s.,!?-]+$/.test(title)) {\r\n            return 'Title contains invalid characters';\r\n        }\r\n        return '';\r\n    };\r\n\r\n    const validateContent = (content) => {\r\n        if (!content.trim()) {\r\n            return 'Content is required';\r\n        }\r\n        if (content.trim().length < MIN_CONTENT_LENGTH) {\r\n            return `Content must be at least ${MIN_CONTENT_LENGTH} characters`;\r\n        }\r\n        if (content.length > MAX_CONTENT_LENGTH) {\r\n            return `Content cannot exceed ${MAX_CONTENT_LENGTH} characters`;\r\n        }\r\n        return '';\r\n    };\r\n\r\n    const validateCategory = (category) => {\r\n        if (!categories.includes(category)) {\r\n            return 'Please select a valid category';\r\n        }\r\n        return '';\r\n    };\r\n\r\n    const validateImage = (file) => {\r\n        if (file) {\r\n            if (!ALLOWED_IMAGE_TYPES.includes(file.type)) {\r\n                return 'Invalid image format. Please use JPEG, PNG, GIF, or WebP';\r\n            }\r\n            if (file.size > MAX_IMAGE_SIZE) {\r\n                return 'Image size should be less than 5MB';\r\n            }\r\n        }\r\n        return '';\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            [name]: value\r\n        }));\r\n\r\n        // Real-time validation\r\n        let error = '';\r\n        switch (name) {\r\n            case 'title':\r\n                error = validateTitle(value);\r\n                break;\r\n            case 'content':\r\n                error = validateContent(value);\r\n                break;\r\n            case 'category':\r\n                error = validateCategory(value);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        setErrors(prev => ({\r\n            ...prev,\r\n            [name]: error\r\n        }));\r\n    };\r\n\r\n    const handleImageChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if (!file) return;\r\n\r\n        const imageError = validateImage(file);\r\n        if (imageError) {\r\n            toast.error(imageError);\r\n            e.target.value = '';\r\n            return;\r\n        }\r\n\r\n        setFormData(prev => ({ ...prev, image: file }));\r\n        setErrors(prev => ({ ...prev, image: '' }));\r\n        \r\n        // Create image preview\r\n        const reader = new FileReader();\r\n        reader.onloadend = () => {\r\n            setImagePreview(reader.result);\r\n        };\r\n        reader.readAsDataURL(file);\r\n    };\r\n\r\n    const validateForm = () => {\r\n        const newErrors = {\r\n            title: validateTitle(formData.title),\r\n            content: validateContent(formData.content),\r\n            category: validateCategory(formData.category),\r\n            image: validateImage(formData.image)\r\n        };\r\n\r\n        setErrors(newErrors);\r\n\r\n        return !Object.values(newErrors).some(error => error !== '');\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        \r\n        if (!validateForm()) {\r\n            const errorMessages = Object.values(errors).filter(error => error !== '');\r\n            errorMessages.forEach(error => toast.error(error));\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n\r\n        try {\r\n            if (process.env.NODE_ENV === 'development') {\r\n                console.log('Submitting confession:', {\r\n                    ...formData,\r\n                    image: formData.image ? 'Image file present' : 'No image'\r\n                });\r\n            }\r\n\r\n            const response = await createConfession({\r\n                title: formData.title.trim(),\r\n                content: formData.content.trim(),\r\n                category: formData.category,\r\n                image: formData.image,\r\n                author: CURRENT_USER,\r\n                timestamp: CURRENT_DATETIME\r\n            });\r\n\r\n        } catch (error) {\r\n            console.error('Error creating confession:', error);\r\n            toast.error(error.message || 'Failed to create confession');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const resetForm = () => {\r\n        const confirmReset = window.confirm('Are you sure you want to reset the form? All entered data will be lost.');\r\n        if (confirmReset) {\r\n            setFormData({\r\n                title: '',\r\n                content: '',\r\n                category: 'Personal',\r\n                image: null,\r\n                author: CURRENT_USER,\r\n                timestamp: CURRENT_DATETIME\r\n            });\r\n            setErrors({\r\n                title: '',\r\n                content: '',\r\n                category: '',\r\n                image: ''\r\n            });\r\n            setImagePreview(null);\r\n            if (document.getElementById('image')) {\r\n                document.getElementById('image').value = '';\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"create-confession-container\">\r\n            <div className=\"confession-form-wrapper\">\r\n                <div className=\"confession-header\">\r\n                    <h2>Share Your Confession</h2>\r\n                    <p>Express yourself freely and securely</p>\r\n                </div>\r\n                \r\n                <form onSubmit={handleSubmit} className=\"confession-form\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"title\">\r\n                            Title \r\n                            <span className={`character-count ${\r\n                                formData.title.length > MAX_TITLE_LENGTH * 0.9 ? 'near-limit' : ''\r\n                            }`}>\r\n                                {formData.title.length}/{MAX_TITLE_LENGTH}\r\n                            </span>\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"title\"\r\n                            name=\"title\"\r\n                            value={formData.title}\r\n                            onChange={handleInputChange}\r\n                            required\r\n                            maxLength={MAX_TITLE_LENGTH}\r\n                            placeholder=\"Give your confession a title\"\r\n                            className={`form-input ${errors.title ? 'error' : ''}`}\r\n                        />\r\n                        {errors.title && <span className=\"error-message\">{errors.title}</span>}\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"content\">\r\n                            Your Confession\r\n                            <span className={`character-count ${\r\n                                formData.content.length > MAX_CONTENT_LENGTH * 0.9 ? 'near-limit' : ''\r\n                            }`}>\r\n                                {formData.content.length}/{MAX_CONTENT_LENGTH}\r\n                            </span>\r\n                        </label>\r\n                        <textarea\r\n                            id=\"content\"\r\n                            name=\"content\"\r\n                            value={formData.content}\r\n                            onChange={handleInputChange}\r\n                            required\r\n                            maxLength={MAX_CONTENT_LENGTH}\r\n                            placeholder=\"Share your thoughts...\"\r\n                            className={`form-textarea ${errors.content ? 'error' : ''}`}\r\n                            rows=\"6\"\r\n                        />\r\n                        {errors.content && <span className=\"error-message\">{errors.content}</span>}\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"category\">Select Category</label>\r\n                        <select\r\n                            id=\"category\"\r\n                            name=\"category\"\r\n                            value={formData.category}\r\n                            onChange={handleInputChange}\r\n                            required\r\n                            className={`form-select ${errors.category ? 'error' : ''}`}\r\n                        >\r\n                            {categories.map(category => (\r\n                                <option key={category} value={category}>\r\n                                    {category}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                        {errors.category && <span className=\"error-message\">{errors.category}</span>}\r\n                    </div>\r\n\r\n                    <div className=\"form-group file-upload-group\">\r\n                        <label htmlFor=\"image\">\r\n                            Add Image (optional)\r\n                            <span className=\"file-info\">\r\n                                Accepted formats: JPEG, PNG, GIF, WebP (Max: 5MB)\r\n                            </span>\r\n                        </label>\r\n                        <div className=\"file-input-container\">\r\n                            <input\r\n                                type=\"file\"\r\n                                id=\"image\"\r\n                                name=\"image\"\r\n                                accept={ALLOWED_IMAGE_TYPES.join(',')}\r\n                                onChange={handleImageChange}\r\n                                className={`form-input-file ${errors.image ? 'error' : ''}`}\r\n                            />\r\n                            {formData.image && (\r\n                                <button \r\n                                    type=\"button\" \r\n                                    onClick={() => {\r\n                                        setImagePreview(null);\r\n                                        setFormData(prev => ({ ...prev, image: null }));\r\n                                        document.getElementById('image').value = '';\r\n                                        setErrors(prev => ({ ...prev, image: '' }));\r\n                                    }}\r\n                                    className=\"file-remove-btn\"\r\n                                >\r\n                                    <i className=\"fas fa-times\"></i>\r\n                                    Remove\r\n                                </button>\r\n                            )}\r\n                        </div>\r\n                        {errors.image && <span className=\"error-message\">{errors.image}</span>}\r\n                        {imagePreview && (\r\n                            <div className=\"image-preview\">\r\n                                <img src={imagePreview} alt=\"Preview\" />\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n\r\n                    <div className=\"form-actions\">\r\n                        <button \r\n                            type=\"submit\" \r\n                            className={`submit-button ${loading ? 'loading' : ''}`}\r\n                            disabled={loading || Object.values(errors).some(error => error !== '')}\r\n                        >\r\n                            {loading ? 'Creating...' : 'Share Confession'}\r\n                        </button>\r\n                        \r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"reset-button\"\r\n                            onClick={resetForm}\r\n                            disabled={loading}\r\n                        >\r\n                            Reset Form\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateConfession;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}