{"ast":null,"code":"var _jsxFileName = \"C:\\\\uiux development\\\\frontend\\\\confessapp\\\\src\\\\pages\\\\loginpage\\\\Loginpage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, Link, useLocation } from 'react-router-dom';\nimport { loginApi, getStoredUserData } from \"../../apis/Api\";\nimport { toast } from 'react-toastify';\nimport LoadingSpinner from '../../components/LoadingSpinner/LoadingSpinner';\nimport './Loginpage.css';\n\n// Storage Keys\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STORAGE_KEYS = {\n  REMEMBERED_EMAIL: 'rememberedEmail',\n  SESSION_WARNING: 'sessionWarningShown',\n  TOKEN: 'token',\n  USER: 'user',\n  LAST_ACTIVE: 'lastActive',\n  SESSION_START: 'sessionStart',\n  SESSION_ID: 'sessionId'\n};\n\n// Utility Functions\nconst getCurrentUTCDateTime = () => {\n  const now = new Date();\n  const year = now.getUTCFullYear();\n  const month = String(now.getUTCMonth() + 1).padStart(2, '0');\n  const day = String(now.getUTCDate()).padStart(2, '0');\n  const hours = String(now.getUTCHours()).padStart(2, '0');\n  const minutes = String(now.getUTCMinutes()).padStart(2, '0');\n  const seconds = String(now.getUTCSeconds()).padStart(2, '0');\n  return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\n};\nconst getCurrentUser = () => {\n  const userData = getStoredUserData();\n  return (userData === null || userData === void 0 ? void 0 : userData.nickname) || null;\n};\nconst getSystemInfo = () => ({\n  userAgent: navigator.userAgent,\n  platform: navigator.platform,\n  language: navigator.language,\n  timezone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n  screenResolution: `${window.screen.width}x${window.screen.height}`,\n  timestamp: getCurrentUTCDateTime(),\n  currentUser: getCurrentUser()\n});\nconst Loginpage = ({\n  onLogin\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n    timestamp: getCurrentUTCDateTime(),\n    lastActive: getCurrentUTCDateTime()\n  });\n  const [loading, setLoading] = useState(false);\n  const [errors, setErrors] = useState({\n    email: '',\n    password: '',\n    general: ''\n  });\n  const navigate = useNavigate();\n  const location = useLocation();\n  useEffect(() => {\n    const initializeLoginPage = () => {\n      const currentTime = getCurrentUTCDateTime();\n      const currentUser = getCurrentUser();\n\n      // Clear existing session data except remembered email\n      Object.keys(localStorage).forEach(key => {\n        if (key !== STORAGE_KEYS.REMEMBERED_EMAIL) {\n          localStorage.removeItem(key);\n        }\n      });\n\n      // Check for session expiry redirect\n      const searchParams = new URLSearchParams(location.search);\n      if (searchParams.get('session') === 'expired') {\n        toast.info('Your session has expired. Please login again.', {\n          toastId: 'session-expired'\n        });\n      }\n\n      // Check for remembered email\n      const rememberedEmail = localStorage.getItem(STORAGE_KEYS.REMEMBERED_EMAIL);\n      if (rememberedEmail) {\n        setFormData(prev => ({\n          ...prev,\n          email: rememberedEmail,\n          timestamp: currentTime,\n          lastActive: currentTime\n        }));\n      }\n\n      // Log initialization\n      console.log('Login page initialized:', {\n        timestamp: currentTime,\n        rememberedEmail: !!rememberedEmail,\n        sessionExpired: searchParams.get('session') === 'expired',\n        systemInfo: getSystemInfo(),\n        currentUser\n      });\n      document.title = `Login - Confession App (${currentTime})`;\n    };\n    initializeLoginPage();\n\n    // Cleanup\n    return () => {\n      toast.dismiss('session-expired');\n    };\n  }, [location.search]);\n  const validateForm = () => {\n    const newErrors = {};\n    const currentTime = getCurrentUTCDateTime();\n    const currentUser = getCurrentUser();\n    if (!formData.email) {\n      newErrors.email = \"Email is required\";\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n      newErrors.email = \"Please enter a valid email address\";\n    }\n    if (!formData.password) {\n      newErrors.password = \"Password is required\";\n    } else if (formData.password.length < 8) {\n      newErrors.password = \"Password must be at least 8 characters\";\n    }\n    setErrors(prev => ({\n      ...prev,\n      ...newErrors\n    }));\n    console.log('Form validation:', {\n      timestamp: currentTime,\n      hasErrors: Object.keys(newErrors).length > 0,\n      fields: Object.keys(formData),\n      currentUser\n    });\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    const currentTime = getCurrentUTCDateTime();\n    setFormData(prev => ({\n      ...prev,\n      [name]: value,\n      timestamp: currentTime,\n      lastActive: currentTime\n    }));\n    setErrors(prev => ({\n      ...prev,\n      [name]: '',\n      general: ''\n    }));\n    localStorage.setItem(STORAGE_KEYS.LAST_ACTIVE, currentTime);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateForm()) return;\n    const currentTime = getCurrentUTCDateTime();\n    const currentUser = getCurrentUser();\n    try {\n      var _response$data;\n      setLoading(true);\n      console.log('Login attempt:', {\n        email: formData.email,\n        timestamp: currentTime,\n        systemInfo: getSystemInfo(),\n        currentUser\n      });\n      const loginData = {\n        email: formData.email,\n        password: formData.password,\n        timestamp: currentTime,\n        lastActive: currentTime,\n        systemInfo: getSystemInfo()\n      };\n      const response = await loginApi(loginData);\n      if ((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.success) {\n        var _location$state;\n        const {\n          user,\n          token,\n          sessionId\n        } = response.data.data;\n\n        // Store session data\n        localStorage.setItem(STORAGE_KEYS.TOKEN, token);\n        localStorage.setItem(STORAGE_KEYS.SESSION_ID, sessionId);\n        localStorage.setItem(STORAGE_KEYS.SESSION_START, currentTime);\n        localStorage.setItem(STORAGE_KEYS.LAST_ACTIVE, currentTime);\n        localStorage.setItem(STORAGE_KEYS.USER, JSON.stringify({\n          ...user,\n          lastLoginTime: currentTime,\n          lastActive: currentTime,\n          systemInfo: getSystemInfo()\n        }));\n\n        // Handle remember me\n        const rememberMe = document.getElementById('rememberMe').checked;\n        if (rememberMe) {\n          localStorage.setItem(STORAGE_KEYS.REMEMBERED_EMAIL, formData.email);\n        } else {\n          localStorage.removeItem(STORAGE_KEYS.REMEMBERED_EMAIL);\n        }\n        console.log('Login successful:', {\n          userId: user._id,\n          nickname: user.nickname,\n          sessionId,\n          timestamp: currentTime\n        });\n        toast.success(`Welcome back, ${user.nickname}!`);\n        onLogin();\n        navigate(((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.from) || '/');\n      }\n    } catch (error) {\n      console.error('Login error:', {\n        error: error.message,\n        timestamp: currentTime,\n        systemInfo: getSystemInfo(),\n        currentUser\n      });\n      setErrors(prev => ({\n        ...prev,\n        general: error.message || 'Login failed. Please try again.'\n      }));\n      toast.error(error.message || 'Login failed. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Welcome Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please sign in to continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"timestamp\",\n          children: [\"Last Updated: \", getCurrentUTCDateTime()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"login-form\",\n        children: [errors.general && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          role: \"alert\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-exclamation-circle\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: errors.general\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-envelope\",\n              \"aria-hidden\": \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 29\n            }, this), \"Email\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            name: \"email\",\n            value: formData.email,\n            onChange: handleInputChange,\n            placeholder: \"Enter your email\",\n            className: `form-input ${errors.email ? 'error' : ''}`,\n            autoComplete: \"email\",\n            \"aria-describedby\": errors.email ? \"emailError\" : undefined,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 25\n          }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-text\",\n            id: \"emailError\",\n            role: \"alert\",\n            children: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-lock\",\n              \"aria-hidden\": \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 29\n            }, this), \"Password\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            name: \"password\",\n            value: formData.password,\n            onChange: handleInputChange,\n            placeholder: \"Enter your password\",\n            className: `form-input ${errors.password ? 'error' : ''}`,\n            autoComplete: \"current-password\",\n            \"aria-describedby\": errors.password ? \"passwordError\" : undefined,\n            required: true,\n            minLength: \"8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 25\n          }, this), errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-text\",\n            id: \"passwordError\",\n            role: \"alert\",\n            children: errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-options\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"remember-me\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: \"rememberMe\",\n              defaultChecked: !!localStorage.getItem(STORAGE_KEYS.REMEMBERED_EMAIL)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Remember me\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/forgot-password\",\n            className: \"forgot-password\",\n            children: \"Forgot Password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: `login-button ${loading ? 'loading' : ''}`,\n          disabled: loading,\n          \"aria-busy\": loading,\n          children: loading ? /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n            fullScreen: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 29\n          }, this) : 'Sign In'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Don't have an account?\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/register\",\n            className: \"signup-link\",\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"session-info\",\n          children: [\"Session started at: \", getCurrentUTCDateTime()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 9\n  }, this);\n};\n_s(Loginpage, \"gNtcl5rGgKyGOyu+YdvZeNKhGu0=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Loginpage;\nexport default Loginpage;\nvar _c;\n$RefreshReg$(_c, \"Loginpage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Link","useLocation","loginApi","getStoredUserData","toast","LoadingSpinner","jsxDEV","_jsxDEV","STORAGE_KEYS","REMEMBERED_EMAIL","SESSION_WARNING","TOKEN","USER","LAST_ACTIVE","SESSION_START","SESSION_ID","getCurrentUTCDateTime","now","Date","year","getUTCFullYear","month","String","getUTCMonth","padStart","day","getUTCDate","hours","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","getCurrentUser","userData","nickname","getSystemInfo","userAgent","navigator","platform","language","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","screenResolution","window","screen","width","height","timestamp","currentUser","Loginpage","onLogin","_s","formData","setFormData","email","password","lastActive","loading","setLoading","errors","setErrors","general","navigate","location","initializeLoginPage","currentTime","Object","keys","localStorage","forEach","key","removeItem","searchParams","URLSearchParams","search","get","info","toastId","rememberedEmail","getItem","prev","console","log","sessionExpired","systemInfo","document","title","dismiss","validateForm","newErrors","test","length","hasErrors","fields","handleInputChange","e","name","value","target","setItem","handleSubmit","preventDefault","_response$data","loginData","response","data","success","_location$state","user","token","sessionId","JSON","stringify","lastLoginTime","rememberMe","getElementById","checked","userId","_id","state","from","error","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","role","htmlFor","type","id","onChange","placeholder","autoComplete","undefined","required","minLength","defaultChecked","to","disabled","fullScreen","_c","$RefreshReg$"],"sources":["C:/uiux development/frontend/confessapp/src/pages/loginpage/Loginpage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, Link, useLocation } from 'react-router-dom';\r\nimport { loginApi, getStoredUserData } from \"../../apis/Api\";\r\nimport { toast } from 'react-toastify';\r\nimport LoadingSpinner from '../../components/LoadingSpinner/LoadingSpinner';\r\nimport './Loginpage.css';\r\n\r\n// Storage Keys\r\nconst STORAGE_KEYS = {\r\n    REMEMBERED_EMAIL: 'rememberedEmail',\r\n    SESSION_WARNING: 'sessionWarningShown',\r\n    TOKEN: 'token',\r\n    USER: 'user',\r\n    LAST_ACTIVE: 'lastActive',\r\n    SESSION_START: 'sessionStart',\r\n    SESSION_ID: 'sessionId'\r\n};\r\n\r\n// Utility Functions\r\nconst getCurrentUTCDateTime = () => {\r\n    const now = new Date();\r\n    const year = now.getUTCFullYear();\r\n    const month = String(now.getUTCMonth() + 1).padStart(2, '0');\r\n    const day = String(now.getUTCDate()).padStart(2, '0');\r\n    const hours = String(now.getUTCHours()).padStart(2, '0');\r\n    const minutes = String(now.getUTCMinutes()).padStart(2, '0');\r\n    const seconds = String(now.getUTCSeconds()).padStart(2, '0');\r\n    return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\r\n};\r\n\r\nconst getCurrentUser = () => {\r\n    const userData = getStoredUserData();\r\n    return userData?.nickname || null;\r\n};\r\n\r\nconst getSystemInfo = () => ({\r\n    userAgent: navigator.userAgent,\r\n    platform: navigator.platform,\r\n    language: navigator.language,\r\n    timezone: Intl.DateTimeFormat().resolvedOptions().timeZone,\r\n    screenResolution: `${window.screen.width}x${window.screen.height}`,\r\n    timestamp: getCurrentUTCDateTime(),\r\n    currentUser: getCurrentUser()\r\n});\r\n\r\nconst Loginpage = ({ onLogin }) => {\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: '',\r\n        timestamp: getCurrentUTCDateTime(),\r\n        lastActive: getCurrentUTCDateTime()\r\n    });\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [errors, setErrors] = useState({\r\n        email: '',\r\n        password: '',\r\n        general: ''\r\n    });\r\n\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        const initializeLoginPage = () => {\r\n            const currentTime = getCurrentUTCDateTime();\r\n            const currentUser = getCurrentUser();\r\n\r\n            // Clear existing session data except remembered email\r\n            Object.keys(localStorage).forEach(key => {\r\n                if (key !== STORAGE_KEYS.REMEMBERED_EMAIL) {\r\n                    localStorage.removeItem(key);\r\n                }\r\n            });\r\n\r\n            // Check for session expiry redirect\r\n            const searchParams = new URLSearchParams(location.search);\r\n            if (searchParams.get('session') === 'expired') {\r\n                toast.info('Your session has expired. Please login again.', {\r\n                    toastId: 'session-expired'\r\n                });\r\n            }\r\n\r\n            // Check for remembered email\r\n            const rememberedEmail = localStorage.getItem(STORAGE_KEYS.REMEMBERED_EMAIL);\r\n            if (rememberedEmail) {\r\n                setFormData(prev => ({\r\n                    ...prev,\r\n                    email: rememberedEmail,\r\n                    timestamp: currentTime,\r\n                    lastActive: currentTime\r\n                }));\r\n            }\r\n\r\n            // Log initialization\r\n            console.log('Login page initialized:', {\r\n                timestamp: currentTime,\r\n                rememberedEmail: !!rememberedEmail,\r\n                sessionExpired: searchParams.get('session') === 'expired',\r\n                systemInfo: getSystemInfo(),\r\n                currentUser\r\n            });\r\n\r\n            document.title = `Login - Confession App (${currentTime})`;\r\n        };\r\n\r\n        initializeLoginPage();\r\n\r\n        // Cleanup\r\n        return () => {\r\n            toast.dismiss('session-expired');\r\n        };\r\n    }, [location.search]);\r\n\r\n    const validateForm = () => {\r\n        const newErrors = {};\r\n        const currentTime = getCurrentUTCDateTime();\r\n        const currentUser = getCurrentUser();\r\n\r\n        if (!formData.email) {\r\n            newErrors.email = \"Email is required\";\r\n        } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n            newErrors.email = \"Please enter a valid email address\";\r\n        }\r\n\r\n        if (!formData.password) {\r\n            newErrors.password = \"Password is required\";\r\n        } else if (formData.password.length < 8) {\r\n            newErrors.password = \"Password must be at least 8 characters\";\r\n        }\r\n\r\n        setErrors(prev => ({\r\n            ...prev,\r\n            ...newErrors\r\n        }));\r\n\r\n        console.log('Form validation:', {\r\n            timestamp: currentTime,\r\n            hasErrors: Object.keys(newErrors).length > 0,\r\n            fields: Object.keys(formData),\r\n            currentUser\r\n        });\r\n\r\n        return Object.keys(newErrors).length === 0;\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        const currentTime = getCurrentUTCDateTime();\r\n\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            [name]: value,\r\n            timestamp: currentTime,\r\n            lastActive: currentTime\r\n        }));\r\n\r\n        setErrors(prev => ({\r\n            ...prev,\r\n            [name]: '',\r\n            general: ''\r\n        }));\r\n\r\n        localStorage.setItem(STORAGE_KEYS.LAST_ACTIVE, currentTime);\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        \r\n        if (!validateForm()) return;\r\n\r\n        const currentTime = getCurrentUTCDateTime();\r\n        const currentUser = getCurrentUser();\r\n\r\n        try {\r\n            setLoading(true);\r\n            console.log('Login attempt:', {\r\n                email: formData.email,\r\n                timestamp: currentTime,\r\n                systemInfo: getSystemInfo(),\r\n                currentUser\r\n            });\r\n            \r\n            const loginData = {\r\n                email: formData.email,\r\n                password: formData.password,\r\n                timestamp: currentTime,\r\n                lastActive: currentTime,\r\n                systemInfo: getSystemInfo()\r\n            };\r\n\r\n            const response = await loginApi(loginData);\r\n\r\n            if (response.data?.success) {\r\n                const { user, token, sessionId } = response.data.data;\r\n\r\n                // Store session data\r\n                localStorage.setItem(STORAGE_KEYS.TOKEN, token);\r\n                localStorage.setItem(STORAGE_KEYS.SESSION_ID, sessionId);\r\n                localStorage.setItem(STORAGE_KEYS.SESSION_START, currentTime);\r\n                localStorage.setItem(STORAGE_KEYS.LAST_ACTIVE, currentTime);\r\n                localStorage.setItem(STORAGE_KEYS.USER, JSON.stringify({\r\n                    ...user,\r\n                    lastLoginTime: currentTime,\r\n                    lastActive: currentTime,\r\n                    systemInfo: getSystemInfo()\r\n                }));\r\n\r\n                // Handle remember me\r\n                const rememberMe = document.getElementById('rememberMe').checked;\r\n                if (rememberMe) {\r\n                    localStorage.setItem(STORAGE_KEYS.REMEMBERED_EMAIL, formData.email);\r\n                } else {\r\n                    localStorage.removeItem(STORAGE_KEYS.REMEMBERED_EMAIL);\r\n                }\r\n\r\n                console.log('Login successful:', {\r\n                    userId: user._id,\r\n                    nickname: user.nickname,\r\n                    sessionId,\r\n                    timestamp: currentTime\r\n                });\r\n\r\n                toast.success(`Welcome back, ${user.nickname}!`);\r\n                onLogin();\r\n                navigate(location.state?.from || '/');\r\n            }\r\n        } catch (error) {\r\n            console.error('Login error:', {\r\n                error: error.message,\r\n                timestamp: currentTime,\r\n                systemInfo: getSystemInfo(),\r\n                currentUser\r\n            });\r\n            \r\n            setErrors(prev => ({\r\n                ...prev,\r\n                general: error.message || 'Login failed. Please try again.'\r\n            }));\r\n            \r\n            toast.error(error.message || 'Login failed. Please try again.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <div className=\"login-box\">\r\n                <div className=\"login-header\">\r\n                    <h1>Welcome Back</h1>\r\n                    <p>Please sign in to continue</p>\r\n                    <p className=\"timestamp\">Last Updated: {getCurrentUTCDateTime()}</p>\r\n                </div>\r\n\r\n                <form onSubmit={handleSubmit} className=\"login-form\">\r\n                    {errors.general && (\r\n                        <div className=\"error-message\" role=\"alert\">\r\n                            <i className=\"fas fa-exclamation-circle\" aria-hidden=\"true\"></i>\r\n                            <span>{errors.general}</span>\r\n                        </div>\r\n                    )}\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"email\">\r\n                            <i className=\"fas fa-envelope\" aria-hidden=\"true\"></i>\r\n                            Email\r\n                        </label>\r\n                        <input\r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            value={formData.email}\r\n                            onChange={handleInputChange}\r\n                            placeholder=\"Enter your email\"\r\n                            className={`form-input ${errors.email ? 'error' : ''}`}\r\n                            autoComplete=\"email\"\r\n                            aria-describedby={errors.email ? \"emailError\" : undefined}\r\n                            required\r\n                        />\r\n                        {errors.email && (\r\n                            <span className=\"error-text\" id=\"emailError\" role=\"alert\">\r\n                                {errors.email}\r\n                            </span>\r\n                        )}\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password\">\r\n                            <i className=\"fas fa-lock\" aria-hidden=\"true\"></i>\r\n                            Password\r\n                        </label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            name=\"password\"\r\n                            value={formData.password}\r\n                            onChange={handleInputChange}\r\n                            placeholder=\"Enter your password\"\r\n                            className={`form-input ${errors.password ? 'error' : ''}`}\r\n                            autoComplete=\"current-password\"\r\n                            aria-describedby={errors.password ? \"passwordError\" : undefined}\r\n                            required\r\n                            minLength=\"8\"\r\n                        />\r\n                        {errors.password && (\r\n                            <span className=\"error-text\" id=\"passwordError\" role=\"alert\">\r\n                                {errors.password}\r\n                            </span>\r\n                        )}\r\n                    </div>\r\n\r\n                    <div className=\"form-options\">\r\n                        <label className=\"remember-me\">\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                id=\"rememberMe\"\r\n                                defaultChecked={!!localStorage.getItem(STORAGE_KEYS.REMEMBERED_EMAIL)}\r\n                            />\r\n                            <span>Remember me</span>\r\n                        </label>\r\n                        <Link to=\"/forgot-password\" className=\"forgot-password\">\r\n                            Forgot Password?\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <button \r\n                        type=\"submit\" \r\n                        className={`login-button ${loading ? 'loading' : ''}`}\r\n                        disabled={loading}\r\n                        aria-busy={loading}\r\n                    >\r\n                        {loading ? (\r\n                            <LoadingSpinner fullScreen={false} />\r\n                        ) : (\r\n                            'Sign In'\r\n                        )}\r\n                    </button>\r\n                </form>\r\n\r\n                <div className=\"login-footer\">\r\n                    <p>\r\n                        Don't have an account?{' '}\r\n                        <Link to=\"/register\" className=\"signup-link\">\r\n                            Sign up\r\n                        </Link>\r\n                    </p>\r\n                    <p className=\"session-info\">\r\n                        Session started at: {getCurrentUTCDateTime()}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loginpage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}