{"ast":null,"code":"var _jsxFileName = \"C:\\\\uiux development\\\\frontend\\\\confessapp\\\\src\\\\pages\\\\loginpage\\\\Loginpage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, Link, useLocation } from 'react-router-dom';\nimport { loginApi } from \"../../apis/Api\";\nimport { toast } from 'react-toastify';\nimport LoadingSpinner from '../../components/LoadingSpinner/LoadingSpinner';\nimport './Loginpage.css';\n\n// Utility functions for dynamic values\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getCurrentUTCDateTime = () => {\n  const now = new Date();\n  return now.toISOString().slice(0, 19).replace('T', ' ');\n};\nconst getCurrentUser = () => {\n  try {\n    const userData = localStorage.getItem('user');\n    if (!userData) return null;\n    return JSON.parse(userData).nickname;\n  } catch (error) {\n    console.error('Error getting current user:', error);\n    return null;\n  }\n};\nconst STORAGE_KEYS = {\n  REMEMBERED_EMAIL: 'rememberedEmail',\n  SESSION_WARNING: 'sessionWarningShown',\n  TOKEN: 'token',\n  USER: 'user',\n  LAST_ACTIVE: 'lastActive'\n};\nconst getSystemInfo = () => ({\n  userAgent: navigator.userAgent,\n  platform: navigator.platform,\n  language: navigator.language,\n  timezone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n  screenResolution: `${window.screen.width}x${window.screen.height}`,\n  timestamp: getCurrentUTCDateTime()\n});\nconst Loginpage = ({\n  onLogin\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n    timestamp: getCurrentUTCDateTime(),\n    lastActive: getCurrentUTCDateTime()\n  });\n  const [loading, setLoading] = useState(false);\n  const [errors, setErrors] = useState({\n    email: '',\n    password: '',\n    general: ''\n  });\n  const navigate = useNavigate();\n  const location = useLocation();\n  useEffect(() => {\n    const initializeLoginPage = () => {\n      const currentTime = getCurrentUTCDateTime();\n\n      // Clear existing session data except remembered email\n      Object.values(STORAGE_KEYS).forEach(key => {\n        if (key !== STORAGE_KEYS.REMEMBERED_EMAIL) {\n          localStorage.removeItem(key);\n        }\n      });\n\n      // Check for session expiry redirect\n      const searchParams = new URLSearchParams(location.search);\n      if (searchParams.get('session') === 'expired') {\n        toast.info('Your session has expired. Please login again.', {\n          toastId: 'session-expired-login'\n        });\n      }\n\n      // Check for remembered email\n      const rememberedEmail = localStorage.getItem(STORAGE_KEYS.REMEMBERED_EMAIL);\n      if (rememberedEmail) {\n        setFormData(prev => ({\n          ...prev,\n          email: rememberedEmail,\n          timestamp: currentTime,\n          lastActive: currentTime\n        }));\n      }\n\n      // Update document title with current time\n      document.title = `Login - Confession App (${currentTime})`;\n    };\n    initializeLoginPage();\n    return () => {\n      toast.dismiss('session-expired-login');\n    };\n  }, [location.search]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    const currentTime = getCurrentUTCDateTime();\n    setFormData(prev => ({\n      ...prev,\n      [name]: value,\n      timestamp: currentTime,\n      lastActive: currentTime\n    }));\n    setErrors(prev => ({\n      ...prev,\n      [name]: '',\n      general: ''\n    }));\n  };\n  const validateForm = () => {\n    const newErrors = {};\n    const currentTime = getCurrentUTCDateTime();\n    if (!formData.email) {\n      newErrors.email = \"Email is required\";\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n      newErrors.email = \"Please enter a valid email address\";\n    }\n    if (!formData.password) {\n      newErrors.password = \"Password is required\";\n    } else if (formData.password.length < 8) {\n      newErrors.password = \"Password must be at least 8 characters\";\n    }\n    setErrors(prev => ({\n      ...prev,\n      ...newErrors\n    }));\n    setFormData(prev => ({\n      ...prev,\n      timestamp: currentTime,\n      lastActive: currentTime\n    }));\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateForm()) return;\n    const currentTime = getCurrentUTCDateTime();\n    try {\n      var _response$data;\n      setLoading(true);\n      const loginData = {\n        email: formData.email,\n        password: formData.password,\n        timestamp: currentTime,\n        lastActive: currentTime,\n        systemInfo: getSystemInfo()\n      };\n      const response = await loginApi(loginData);\n      if ((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.success) {\n        var _location$state;\n        const {\n          user,\n          token\n        } = response.data.data;\n\n        // Store user data with current timestamp\n        localStorage.setItem(STORAGE_KEYS.TOKEN, token);\n        localStorage.setItem(STORAGE_KEYS.USER, JSON.stringify({\n          ...user,\n          lastLoginTime: currentTime,\n          lastActive: currentTime,\n          systemInfo: getSystemInfo()\n        }));\n\n        // Handle remember me\n        const rememberMe = document.getElementById('rememberMe').checked;\n        if (rememberMe) {\n          localStorage.setItem(STORAGE_KEYS.REMEMBERED_EMAIL, formData.email);\n        } else {\n          localStorage.removeItem(STORAGE_KEYS.REMEMBERED_EMAIL);\n        }\n        localStorage.setItem(STORAGE_KEYS.LAST_ACTIVE, currentTime);\n        toast.success(`Welcome back, ${user.nickname || getCurrentUser() || 'User'}!`, {\n          position: \"top-right\",\n          autoClose: 3000\n        });\n        onLogin();\n        navigate(((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.from) || '/');\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Login error:', {\n        error: error.message,\n        timestamp: getCurrentUTCDateTime(),\n        systemInfo: getSystemInfo()\n      });\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed. Please try again.';\n      setErrors(prev => ({\n        ...prev,\n        general: errorMessage\n      }));\n      toast.error(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Welcome Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please sign in to continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"timestamp\",\n          children: [\"Last Updated: \", formData.timestamp]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"login-form\",\n        children: [errors.general && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          role: \"alert\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-exclamation-circle\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: errors.general\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-envelope\",\n              \"aria-hidden\": \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 29\n            }, this), \"Email\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            name: \"email\",\n            value: formData.email,\n            onChange: handleInputChange,\n            placeholder: \"Enter your email\",\n            className: `form-input ${errors.email ? 'error' : ''}`,\n            autoComplete: \"email\",\n            \"aria-describedby\": errors.email ? \"emailError\" : undefined,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 25\n          }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-text\",\n            id: \"emailError\",\n            role: \"alert\",\n            children: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-lock\",\n              \"aria-hidden\": \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 29\n            }, this), \"Password\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            name: \"password\",\n            value: formData.password,\n            onChange: handleInputChange,\n            placeholder: \"Enter your password\",\n            className: `form-input ${errors.password ? 'error' : ''}`,\n            autoComplete: \"current-password\",\n            \"aria-describedby\": errors.password ? \"passwordError\" : undefined,\n            required: true,\n            minLength: \"8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 25\n          }, this), errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-text\",\n            id: \"passwordError\",\n            role: \"alert\",\n            children: errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-options\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"remember-me\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: \"rememberMe\",\n              defaultChecked: !!localStorage.getItem(STORAGE_KEYS.REMEMBERED_EMAIL)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Remember me\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/forgot-password\",\n            className: \"forgot-password\",\n            children: \"Forgot Password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: `login-button ${loading ? 'loading' : ''}`,\n          disabled: loading,\n          \"aria-busy\": loading,\n          children: loading ? /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n            fullScreen: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 29\n          }, this) : 'Sign In'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Don't have an account?\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/register\",\n            className: \"signup-link\",\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"session-info\",\n          children: [\"Session started at: \", getCurrentUTCDateTime()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 9\n  }, this);\n};\n_s(Loginpage, \"gNtcl5rGgKyGOyu+YdvZeNKhGu0=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Loginpage;\nexport default Loginpage;\nvar _c;\n$RefreshReg$(_c, \"Loginpage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Link","useLocation","loginApi","toast","LoadingSpinner","jsxDEV","_jsxDEV","getCurrentUTCDateTime","now","Date","toISOString","slice","replace","getCurrentUser","userData","localStorage","getItem","JSON","parse","nickname","error","console","STORAGE_KEYS","REMEMBERED_EMAIL","SESSION_WARNING","TOKEN","USER","LAST_ACTIVE","getSystemInfo","userAgent","navigator","platform","language","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","screenResolution","window","screen","width","height","timestamp","Loginpage","onLogin","_s","formData","setFormData","email","password","lastActive","loading","setLoading","errors","setErrors","general","navigate","location","initializeLoginPage","currentTime","Object","values","forEach","key","removeItem","searchParams","URLSearchParams","search","get","info","toastId","rememberedEmail","prev","document","title","dismiss","handleInputChange","e","name","value","target","validateForm","newErrors","test","length","keys","handleSubmit","preventDefault","_response$data","loginData","systemInfo","response","data","success","_location$state","user","token","setItem","stringify","lastLoginTime","rememberMe","getElementById","checked","position","autoClose","state","from","_error$response","_error$response$data","message","errorMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","role","htmlFor","type","id","onChange","placeholder","autoComplete","undefined","required","minLength","defaultChecked","to","disabled","fullScreen","_c","$RefreshReg$"],"sources":["C:/uiux development/frontend/confessapp/src/pages/loginpage/Loginpage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, Link, useLocation } from 'react-router-dom';\r\nimport { loginApi } from \"../../apis/Api\";\r\nimport { toast } from 'react-toastify';\r\nimport LoadingSpinner from '../../components/LoadingSpinner/LoadingSpinner';\r\nimport './Loginpage.css';\r\n\r\n// Utility functions for dynamic values\r\nconst getCurrentUTCDateTime = () => {\r\n    const now = new Date();\r\n    return now.toISOString().slice(0, 19).replace('T', ' ');\r\n};\r\n\r\nconst getCurrentUser = () => {\r\n    try {\r\n        const userData = localStorage.getItem('user');\r\n        if (!userData) return null;\r\n        return JSON.parse(userData).nickname;\r\n    } catch (error) {\r\n        console.error('Error getting current user:', error);\r\n        return null;\r\n    }\r\n};\r\n\r\nconst STORAGE_KEYS = {\r\n    REMEMBERED_EMAIL: 'rememberedEmail',\r\n    SESSION_WARNING: 'sessionWarningShown',\r\n    TOKEN: 'token',\r\n    USER: 'user',\r\n    LAST_ACTIVE: 'lastActive'\r\n};\r\n\r\nconst getSystemInfo = () => ({\r\n    userAgent: navigator.userAgent,\r\n    platform: navigator.platform,\r\n    language: navigator.language,\r\n    timezone: Intl.DateTimeFormat().resolvedOptions().timeZone,\r\n    screenResolution: `${window.screen.width}x${window.screen.height}`,\r\n    timestamp: getCurrentUTCDateTime()\r\n});\r\n\r\nconst Loginpage = ({ onLogin }) => {\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: '',\r\n        timestamp: getCurrentUTCDateTime(),\r\n        lastActive: getCurrentUTCDateTime()\r\n    });\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [errors, setErrors] = useState({\r\n        email: '',\r\n        password: '',\r\n        general: ''\r\n    });\r\n\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        const initializeLoginPage = () => {\r\n            const currentTime = getCurrentUTCDateTime();\r\n\r\n            // Clear existing session data except remembered email\r\n            Object.values(STORAGE_KEYS).forEach(key => {\r\n                if (key !== STORAGE_KEYS.REMEMBERED_EMAIL) {\r\n                    localStorage.removeItem(key);\r\n                }\r\n            });\r\n\r\n            // Check for session expiry redirect\r\n            const searchParams = new URLSearchParams(location.search);\r\n            if (searchParams.get('session') === 'expired') {\r\n                toast.info('Your session has expired. Please login again.', {\r\n                    toastId: 'session-expired-login'\r\n                });\r\n            }\r\n\r\n            // Check for remembered email\r\n            const rememberedEmail = localStorage.getItem(STORAGE_KEYS.REMEMBERED_EMAIL);\r\n            if (rememberedEmail) {\r\n                setFormData(prev => ({\r\n                    ...prev,\r\n                    email: rememberedEmail,\r\n                    timestamp: currentTime,\r\n                    lastActive: currentTime\r\n                }));\r\n            }\r\n\r\n            // Update document title with current time\r\n            document.title = `Login - Confession App (${currentTime})`;\r\n        };\r\n\r\n        initializeLoginPage();\r\n\r\n        return () => {\r\n            toast.dismiss('session-expired-login');\r\n        };\r\n    }, [location.search]);\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        const currentTime = getCurrentUTCDateTime();\r\n\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            [name]: value,\r\n            timestamp: currentTime,\r\n            lastActive: currentTime\r\n        }));\r\n\r\n        setErrors(prev => ({\r\n            ...prev,\r\n            [name]: '',\r\n            general: ''\r\n        }));\r\n    };\r\n\r\n    const validateForm = () => {\r\n        const newErrors = {};\r\n        const currentTime = getCurrentUTCDateTime();\r\n\r\n        if (!formData.email) {\r\n            newErrors.email = \"Email is required\";\r\n        } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n            newErrors.email = \"Please enter a valid email address\";\r\n        }\r\n\r\n        if (!formData.password) {\r\n            newErrors.password = \"Password is required\";\r\n        } else if (formData.password.length < 8) {\r\n            newErrors.password = \"Password must be at least 8 characters\";\r\n        }\r\n\r\n        setErrors(prev => ({\r\n            ...prev,\r\n            ...newErrors\r\n        }));\r\n\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            timestamp: currentTime,\r\n            lastActive: currentTime\r\n        }));\r\n\r\n        return Object.keys(newErrors).length === 0;\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        \r\n        if (!validateForm()) return;\r\n\r\n        const currentTime = getCurrentUTCDateTime();\r\n\r\n        try {\r\n            setLoading(true);\r\n            \r\n            const loginData = {\r\n                email: formData.email,\r\n                password: formData.password,\r\n                timestamp: currentTime,\r\n                lastActive: currentTime,\r\n                systemInfo: getSystemInfo()\r\n            };\r\n\r\n            const response = await loginApi(loginData);\r\n\r\n            if (response.data?.success) {\r\n                const { user, token } = response.data.data;\r\n\r\n                // Store user data with current timestamp\r\n                localStorage.setItem(STORAGE_KEYS.TOKEN, token);\r\n                localStorage.setItem(STORAGE_KEYS.USER, JSON.stringify({\r\n                    ...user,\r\n                    lastLoginTime: currentTime,\r\n                    lastActive: currentTime,\r\n                    systemInfo: getSystemInfo()\r\n                }));\r\n\r\n                // Handle remember me\r\n                const rememberMe = document.getElementById('rememberMe').checked;\r\n                if (rememberMe) {\r\n                    localStorage.setItem(STORAGE_KEYS.REMEMBERED_EMAIL, formData.email);\r\n                } else {\r\n                    localStorage.removeItem(STORAGE_KEYS.REMEMBERED_EMAIL);\r\n                }\r\n\r\n                localStorage.setItem(STORAGE_KEYS.LAST_ACTIVE, currentTime);\r\n\r\n                toast.success(`Welcome back, ${user.nickname || getCurrentUser() || 'User'}!`, {\r\n                    position: \"top-right\",\r\n                    autoClose: 3000\r\n                });\r\n\r\n                onLogin();\r\n                navigate(location.state?.from || '/');\r\n            }\r\n        } catch (error) {\r\n            console.error('Login error:', {\r\n                error: error.message,\r\n                timestamp: getCurrentUTCDateTime(),\r\n                systemInfo: getSystemInfo()\r\n            });\r\n            \r\n            const errorMessage = error.response?.data?.message || 'Login failed. Please try again.';\r\n            \r\n            setErrors(prev => ({\r\n                ...prev,\r\n                general: errorMessage\r\n            }));\r\n            \r\n            toast.error(errorMessage);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <div className=\"login-box\">\r\n                <div className=\"login-header\">\r\n                    <h1>Welcome Back</h1>\r\n                    <p>Please sign in to continue</p>\r\n                    <p className=\"timestamp\">Last Updated: {formData.timestamp}</p>\r\n                </div>\r\n\r\n                <form onSubmit={handleSubmit} className=\"login-form\">\r\n                    {errors.general && (\r\n                        <div className=\"error-message\" role=\"alert\">\r\n                            <i className=\"fas fa-exclamation-circle\" aria-hidden=\"true\"></i>\r\n                            <span>{errors.general}</span>\r\n                        </div>\r\n                    )}\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"email\">\r\n                            <i className=\"fas fa-envelope\" aria-hidden=\"true\"></i>\r\n                            Email\r\n                        </label>\r\n                        <input\r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            value={formData.email}\r\n                            onChange={handleInputChange}\r\n                            placeholder=\"Enter your email\"\r\n                            className={`form-input ${errors.email ? 'error' : ''}`}\r\n                            autoComplete=\"email\"\r\n                            aria-describedby={errors.email ? \"emailError\" : undefined}\r\n                            required\r\n                        />\r\n                        {errors.email && (\r\n                            <span className=\"error-text\" id=\"emailError\" role=\"alert\">\r\n                                {errors.email}\r\n                            </span>\r\n                        )}\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password\">\r\n                            <i className=\"fas fa-lock\" aria-hidden=\"true\"></i>\r\n                            Password\r\n                        </label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            name=\"password\"\r\n                            value={formData.password}\r\n                            onChange={handleInputChange}\r\n                            placeholder=\"Enter your password\"\r\n                            className={`form-input ${errors.password ? 'error' : ''}`}\r\n                            autoComplete=\"current-password\"\r\n                            aria-describedby={errors.password ? \"passwordError\" : undefined}\r\n                            required\r\n                            minLength=\"8\"\r\n                        />\r\n                        {errors.password && (\r\n                            <span className=\"error-text\" id=\"passwordError\" role=\"alert\">\r\n                                {errors.password}\r\n                            </span>\r\n                        )}\r\n                    </div>\r\n\r\n                    <div className=\"form-options\">\r\n                        <label className=\"remember-me\">\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                id=\"rememberMe\"\r\n                                defaultChecked={!!localStorage.getItem(STORAGE_KEYS.REMEMBERED_EMAIL)}\r\n                            />\r\n                            <span>Remember me</span>\r\n                        </label>\r\n                        <Link to=\"/forgot-password\" className=\"forgot-password\">\r\n                            Forgot Password?\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <button \r\n                        type=\"submit\" \r\n                        className={`login-button ${loading ? 'loading' : ''}`}\r\n                        disabled={loading}\r\n                        aria-busy={loading}\r\n                    >\r\n                        {loading ? (\r\n                            <LoadingSpinner fullScreen={false} />\r\n                        ) : (\r\n                            'Sign In'\r\n                        )}\r\n                    </button>\r\n                </form>\r\n\r\n                <div className=\"login-footer\">\r\n                    <p>\r\n                        Don't have an account?{' '}\r\n                        <Link to=\"/register\" className=\"signup-link\">\r\n                            Sign up\r\n                        </Link>\r\n                    </p>\r\n                    <p className=\"session-info\">\r\n                        Session started at: {getCurrentUTCDateTime()}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loginpage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}